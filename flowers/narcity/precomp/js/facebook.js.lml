{#config;theme}

// Requires vaniryk
var NarcityFacebook = function() {
    var graphURL = "https://graph.facebook.com/v{=config.default.social.facebook.apiversion}/?access_token={=config.default.social.facebook.token}";
    var noOp = function() {};

    var sendRequest = function(aurl, callback) {
        _a.get(aurl, undefined, callback, false);
    };

    this.requestForShares = function(url, callback) {
        sendRequest(graphURL + "&ids=" + url, function(graphresp) {
            var graphobj = graphresp[url];
            callback(graphobj);
        });
    };

    this.bulkShareRequest = function(urls, loopCallback) {
        sendRequest(graphURL + "&ids=" + urls.join(','), function(graphresp) {
            for (var url in graphresp) {
                loopCallback(graphresp[url], url);
            }
        });
    };

    this.runForCurrentPage = function(done) {
        sendRequest(graphURL + "&id=" + document.location.href, function(data) {
            (done || noOp)(data);
        });
    };

    this.castShareDialog = function() {
        FB.ui({
            method: 'share',
            href: document.location.href
        }, function(response){});
    };

    this.affectAllCounters = function() {
        var urls = {};
        var allurls = [];

        var allNodes = document.querySelectorAll(".fbshare");
        for (var i = 0; i < allNodes.length; i++) {
            var htmlnode = allNodes[i];
            var u = htmlnode.dataset.url == "this" ? document.location.href : htmlnode.dataset.url;

            urls[u] = htmlnode;
            allurls.push(u);
        }

        if (allurls.length != 0) {
            this.bulkShareRequest(allurls, function(ogobj) {
                var htmlnode = urls[ogobj.id];

                if (htmlnode) {
                    var min = htmlnode.dataset.min || -1;
    
                    if (ogobj.share && ogobj.share.share_count && ogobj.share.share_count > min) {
                        htmlnode.innerHTML = ogobj.share.share_count;
        
                        if (htmlnode.dataset.show) {
                            document.getElementById(htmlnode.dataset.show).style.display = htmlnode.dataset.showas || "block";
                        }
                    }
                }
            });
        }
    };

    this.init = function() {
        if (window.lmlcontext == "home") {
            window.lmlhomeurls = [];
            for (var i = 0; i < window.lmlhomelinks.length; i++) {
                window.lmlhomeurls.push(window.lmlhomelinks[i].url);
            }

            this.bulkShareRequest(window.lmlhomeurls, function(respBlock) {
                if (respBlock && respBlock.og_object && respBlock.og_object.share && respBlock.og_object.share.share_count > 100) {
                    var artWrapper = document.querySelector('.homepage ogid["+respBlock.id+"]');
                }
            });
        } else if (window.lmlcontext == "article") {
            this.affectAllCounters();
        }
    };
};

var _fb = new NarcityFacebook();
_fb.init();
