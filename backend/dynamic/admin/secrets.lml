{#config}
{*secrets.all}
<lml:dom v="0.6" />

<h1>Secrets</h1>

<span class="pad10">
    This is where we store all of the credentials. If the combo you are looking for isn't listed below, you probably don't have the rights to see it. Everything you add will be visible by all users which have the same rights as you. 
</span>

<div class="lmlform">
    <lml:foreach var="secretgroup" in="livevars.secrets.all">
        <lml:wrapper tag="div" id="group_{secretgroup._id}" class="secret-group-wrapper">
            <h2><lml:text var="secretgroup.groupname" /></h2>
            <div class="secrets-wrapper">
                <lml:foreach var="cursecret" in="secretgroup.combos">
                    <lml:wrapper tag="div" id="combo_{cursecret._id}" class="secret-combo-wrapper">
                        <div>
                            <b><lml:editable value="cursecret.displayname" name="combo-name" placeholder="Combo" class="no-pad" /></b>
                        </div>
                        <div>
                            <i>Username : </i>
                            <lml:editable value="cursecret.user" name="combo-user" placeholder="Username" />
                        </div>
                        <div>
                            <i>Password : </i>
                            <span class="secret-combo-password-hidden">
                                <span>
                                    <lml:editable value="cursecret.cred" name="combo-cred" placeholder="Password" />
                                </span>
                            </span>
                        </div> 
                    </lml:wrapper>
                </lml:foreach>
            </div>

            <lml:action callback="lmlcastnewsecretcombodialog" class="button" pass="{secretgroup._id}">
                Add Combo
            </lml:action>
            <lml:action callback="lmlsavesecretgroup" class="button green" pass="{secretgroup._id}">
                Save Group
            </lml:action>
        </lml:wrapper>
    </lml:foreach>
    
    <button type="button" class="button" onclick="window.lmlcastnewgroupdialog();">Add group</button>
</div>

<div id="new-secret-group-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Create a new group</h4>
            </div>
            <div class="modal-body">
                <p>This group will be visible to everyone with the same rights as yours.</p>
                <p class="error hidden">You must provide a right you already have.</p>
                <input type="text" id="new-secret-group-name" placeholder="Group name, e.g. Instagram" />
                <input type="text" id="new-secret-group-right" placeholder="Required role, e.g. author" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="button-dismiss-create-group">Dismiss</button>
                <button type="button" class="btn btn-primary" id="button-confirm-create-group">Create</button>
            </div>
        </div>
    </div>
</div>

<div id="new-secret-combo-modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Create a new secret combo</h4>
            </div>
            <div class="modal-body">
                <p>This combo will be visible to everyone with access to the group.</p>
                <input type="text" id="new-secret-combo-name" placeholder="Combo name, e.g. Instagram Page" />
                <input type="text" id="new-secret-combo-user" placeholder="Combo username / identifier" />
                <input type="text" id="new-secret-combo-pass" placeholder="Combo password / credential" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="button-dismiss-create-combo">Dismiss</button>
                <button type="button" class="btn btn-primary" id="button-confirm-create-combo">Create</button>
            </div>
        </div>
    </div>
</div>



<script>
$('#new-secret-group-modal').modal('hide');
$('#new-secret-combo-modal').modal('hide');

if (!window.lmlsecretinit) {
    window.lmlsecretinit = true;

    document.addEventListener('lmlDOMLoaded', function(e) {
        if (document.location.lmladminpath != "secrets") {
            return;
        }

        var passes = document.querySelectorAll('.secret-combo-password-hidden');
        for (var i = 0; i < passes.length; i++) {
            passes[i].addEventListener('click', function() {
                this.classList.add('shown');
            });
        }
    });
}

window.lmlcastnewgroupdialog = function() {
    $('#new-secret-group-modal input[type="text"]').val("");
    $('#new-secret-group-modal').modal('show');
};

window.lmlcastnewsecretcombodialog = function(groupid) {
    $('#new-secret-combo-modal input[type="text"]').val("");
    $('#new-secret-combo-modal').data("groupid", groupid).modal('show');
}

$('#button-dismiss-create-group').bind('click', function() {
    $('#new-secret-group-modal').modal('hide');
});

$('#button-dismiss-create-combo').bind('click', function() {
    $('#new-secret-combo-modal').modal('hide');
});

$('#button-confirm-create-group').bind('click', function() {
    var btn = this;
    btn.classList.add("disabled");
    $.post('{=config.default.server.url}/admin/secrets/add/group', {
        name : $("#new-secret-group-name").val(), 
        right : $("#new-secret-group-right").val()
    }, function(resp) {
        btn.classList.remove("disabled");
        if (resp.valid) {
            $('#new-secret-group-modal').modal('hide');
            $('#new-secret-group-modal p.error').addClass('hidden');

            setTimeout(function() {
                liliumcms.pageloader.loadCurrentURL();
            }, 200);
        } else {
            $('#new-secret-group-modal p.error').removeClass('hidden');
        }
    });
});

$('#button-confirm-create-combo').bind('click', function() {
    var btn = this;
    btn.classList.add("disabled");
    $.post('{=config.default.server.url}/admin/secrets/add/combo/' + $('#new-secret-combo-modal').data("groupid"), {
        name : $("#new-secret-combo-name").val(), 
        user : $("#new-secret-combo-user").val(), 
        pass : $("#new-secret-combo-pass").val()
    }, function(resp) {
        btn.classList.remove("disabled");
        if (resp.valid) {
            $('#new-secret-combo-modal').modal('hide');
            $('#new-secret-combo-modal p.error').addClass('hidden');

            setTimeout(function() {
                liliumcms.pageloader.loadCurrentURL();
            }, 200);
        }
    });
});

window.lmlsavesecretgroup = function(groupid) {
    var bigwrap = document.getElementById('group_' + groupid);
    var combowraps = bigwrap.querySelectorAll('.secret-combo-wrapper');
    var combos = [];
    var greenbutton = bigwrap.querySelector('.green');

    for (var i = 0; i < combowraps.length; i++) {
        var cmbo = combowraps[i]
        combos.push({
            _id : cmbo.id.replace('combo_', ''),
            displayname : cmbo.getElementsByName('combo-name')[0].value,
            user : cmbo.getElementsByName('combo-user')[0].value,
            cred : cmbo.getElementsByName('combo-cred')[0].value
        });
    }

    greenbutton.style.display = "none";
    $.post('{=config.default.server.url}/admin/secrets/update/combo/' + groupid, {combos : JSON.stringify(combos)}, function() {
        greenbutton.style.display = "";
        liliumcms.notify({type : "success", title : "Group combos updated", message : "All combos were successfully updated."});
    });
};

</script>

<style>
.secret-group-wrapper {
    margin: 10px;
    padding: 10px;
    border: 1px solid #CCC;
    background-color: #FCFCFC;
    box-shadow: 0px 0px 3px 1px rgba(0,0,0,0.1);
}

.secret-group-wrapper h2 {
    border-bottom: 1px solid #EEE;
    margin: -10px -10px 10px;
    padding: 10px;
    background-color: #333;
    color: #DDD;
    font-weight: 300;
    font-size: 26px;
}

.lmlform .secret-group-wrapper button {
    margin: 0px 10px 0px 0px;
}

.secrets-wrapper {
    margin: 10px 0px;
}

.modal-body input[type="text"] {
    width: 100%;
    padding: 10px;
    border: 1px solid #DDD;
    margin-bottom: 10px;
    font-size: 14px;
}

.modal-footer .btn-default {
    color: #333;
}

.modal-header .close {
    margin-top: -2px;
    font-size: 36px;
    right: 10px;
}

.secret-combo-wrapper {
    margin-bottom: 10px;
    padding-bottom: 10px;
    border-bottom: 1px dashed #ccc;
}

.secret-combo-password-hidden {
    cursor: pointer;

    -webkit-filter: blur(3px);
       -moz-filter: blur(3px);
        -ms-filter: blur(3px);
         -o-filter: blur(3px);
            filter: blur(3px);

    -webkit-transition: all 0.2s;
       -moz-transition: all 0.2s;
        -ms-transition: all 0.2s;
         -o-transition: all 0.2s;
            transition: all 0.2s;

    font-weight: 500;
    color: #999;
}

.secret-combo-password-hidden.shown {
    cursor: text;

    -webkit-filter: blur(0px);
       -moz-filter: blur(0px);
        -ms-filter: blur(0px);
         -o-filter: blur(0px);
            filter: blur(0px);
}

.lmlform input.lmleditable-seemless {
    padding: 3px 5px;
    margin: 0px 5px;
    background: transparent;
    border: none;
    box-shadow: none;
    display: inline-block;
    width: auto;
}

.lmlform input.lmleditable-seemless.no-pad {
    margin: 0px;
    padding: 0px;
}

.lmlform input.lmleditable-seemless:focus {
    background-color: #EEE;
}

.lmlform input.lmleditable-seemless:hover:active {
    background-color: #DDD;
}

.lmlform input.lmleditable-seemless:hover {
    background-color: #F3F3F3;
}

.lmlform button.green {
    background-color: #45ad2b;
    color: #FFF;
    border: 1px solid #1f861f;
    box-shadow: 0px 0px 3px 0px rgba(89, 182, 100, 0.59);
}

.lmlform button.green:hover {
    background-color: #4cc52e;
}

.lmlform button.green:hover:active {
    background-color: #40902d;
}
</style>
