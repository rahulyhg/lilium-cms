const modalName = "lml-modal-edit-event";
const modalNewDispatchName = "lml-modal-new-dispatch";

const compile = (o, context) => { o(`
<script>
    var statusLabelVocab = {
        "scheduled" : "scheduled",
        "published" : "live on Facebook"
    };

    var updateEvent = function(event, cb) {
        liliumcms.lmldom.sendForm({
            _id : event.id,
            date : event.at.getTime()
        }, "${context._c.server.url}/admin/socialdispatch/move", function() {
            cb && cb();
        });
    };

    window.newDispatchFromTool = function() {
        liliumcms.modals.get("${modalNewDispatchName}").cast();
    }

    var fillSearchResults = function(posts) {
        var wrap = document.getElementById('new-dispatch-search-results');
        while (wrap.firstElementChild) {
            wrap.firstElementChild.remove();
        }

        var dwrap = d.id("new-dispatch-search-results");
        for (var i = 0; i < posts.length; i++) {
            var title = d.make({
                parent : dwrap,
                html : posts[i].title + " &middot; <i>Published on " + 
                    dateFormat(new Date(posts[i].date), "dd/mm/yyyy HH:MM") + "</i>"
            });

            title.cadd('new-dispatch-search-result');
            (function(post, elem) {
                title.bind('click', function() {
                    var maybeSel = dwrap.q('.selected');
                    if (maybeSel.get()) {
                        maybeSel.crm('selected');
                    }

                    elem.cadd('selected');
                    document.getElementById('npostid').value = post._id;
                });
            })(posts[i], title);
        }
    }

    var lastrequestterms = "";
    var maybeSearchDispatchPost = function(terms) {
        if (lastrequestterms != terms && terms.length > 2) {
            lastrequestterms = terms;
            liliumcms.lmldom.get('${context._c.server.url}/admin/socialdispatch/listposts', {
                json : true,
                params : { async : "true", terms : terms }
            }, function(articles) {
                fillSearchResults(articles);
            });
        }
    }

    var handleClick = function(event) {
        liliumcms.lmldom.get("${context._c.server.url}/admin/socialdispatch/deepFetch/" + event.id + "?async=true", { 
            spinflower : true,
            json : true 
        }, function(dispatch) {
            var modal = liliumcms.modals.get("${modalName}");
            modal.dispatchid = dispatch._id;

            document.getElementById("edit-event-label").textContent = statusLabelVocab[dispatch.status];
            document.getElementById("edit-event-image").src = dispatch.article.featuredimage[0].sizes.thumbnaillarge.url;
            document.getElementById("edit-event-title").textContent = dispatch.article.title;
            document.getElementById("edit-event-subtitle").textContent = dispatch.article.subtitle;
            document.getElementById("edit-event-author").textContent = dispatch.article.authors[0].displayname;
            liliumcms.lmldom.flatpickr["edit-event-time"].setDate(new Date(dispatch.time));

            modal.cast();
        });
    };

    var calelem = document.getElementById('social-dispatch-calendar');
    var calendar = new JSCalendar(calelem, {
        width: "full",
        fetchReplaces : true,
        datasource : "${context._c.server.url}/admin/socialdispatch/datasource?async=true"
    }).init().fetch(function() {
        calendar.render();
    }, true);

    calendar.on('cellMoved', function(that, extra) {
        updateEvent(extra.event);
    }).on('click', function(that, event) {
        handleClick(event);
    });

    window["modal_cb_create"] = function(modal) {
        var params = modal.getFormData();
        liliumcms.lmldom.sendForm({
            pageid : params.npageid,
            postid : params.npostid,
            message : params.ncaption,
            time : params.ndatetime.getTime()
        }, "${context._c.server.url}/admin/socialdispatch/schedule", function() {
            modal.dismiss();
            calendar.fetch(function() {
                calendar.render();
                liliumcms.pageloader.present();
            }, true);
        });
    }

    window["modal_cb_save"] = function(modal) {
        var id = modal.dispatchid;
        updateEvent({id : id, at : new Date(modal.getFormData()["edit-event-time"])}, function() {
            calendar.fetch(function() {
                calendar.render();
            }, true);
            modal.dismiss();
        });
    }

    window["modal_cb_delete"] = function(modal) {
        var id = modal.dispatchid;
        liliumcms.lmldom.sendForm({
            id : id
        }, "${context._c.server.url}/admin/socialdispatch/remove", function() {
            modal.dismiss();

            liliumcms.pageloader.tidy();
            calendar.fetch(function() {
                calendar.render();
                liliumcms.pageloader.present();
            }, true);
        });
    };
</script>

<div id="${modalNewDispatchName}" class="lml-modal">
    <div class="lml-modal-title">
        New social dispatch task
    </div>
    <div class="lml-modal-body">
        <div class="lml-modal-field">
            <label>Facebook Page</label>
            <select class="lmldom-liveselect" data-filledby="socialdispatch.networks.liveselect" name="npageid"></select>
        </div>

        <div class="lml-modal-field">
            <label>Caption</label>
            <textarea id="ncaption" class="lml-modal-fulltext" placeholder="This will appear above the image on Facebook"></textarea>
        </div>

        <div class="lml-modal-field">
            <label>When should it be published?</label>
            <input class="lml-date" id="ndatetime" data-options="time" placeholder="Click to select a date and time" />
        </div>

        <div class="lml-modal-field">
            <label>Which article should be published?</label>
            <div>
                <input class="" id="new-dispatch-search" placeholder="Search for words in the title..." />
                <input type="hidden" id="npostid" />
                <div id="new-dispatch-search-results">

                </div>
            </div>
        </div>
    </div>
    <div class="lml-modal-footer">
        <button class="lml-modal-cancel btn-default" type="button">Dismiss</button>
        <button class="lml-modal-action green" data-callback="modal_cb_create" type="button">Create</button>
    </div>
</div>

<div id="${modalName}" class="lml-modal">
    <div class="lml-modal-title">
        Edit social dispatch task
    </div>
    <div class="lml-modal-body">
        <div style="margin: 0px -15px 0px -15px;">
            <img id="edit-event-image" />
        </div>
        <h2 id="edit-event-title"></h2>
        <div class="edit-event-details">
            <div>
                <span id="edit-event-subtitle"></span>
            </div>
            <div class="edit-event-site-details">
                <span>${context._c.website.sitetitle}</span><span> | </span><span id="edit-event-author"></span>
            </div>
        </div>

        <hr />
        <p>
            This article is <b id="edit-event-label"></b>.
        </p>
        <p>
            Dispatch schedule : 
            <input class="lml-date" id="edit-event-time" data-options="time" />
        </p>
    </div>
    <div class="lml-modal-footer">
        <button class="lml-modal-cancel btn-default" type="button">Dismiss</button>
        <button class="lml-modal-action btn-red red" type="button" data-callback="modal_cb_delete">Delete</button>
        <button class="lml-modal-action green" data-callback="modal_cb_save" type="button">Save</button>
    </div>
</div>

<script>
document.getElementById("new-dispatch-search").addEventListener('keyup', function(ev) {
    maybeSearchDispatchPost(ev.target.value);
});
</script>

<style>
#new-dispatch-search-results {
    height: 220px;
    border: 1px solid #DDD;
    overflow: auto;
}

.new-dispatch-search-result {
    border-bottom: 1px solid #DDD;
    padding: 8px;
    cursor: pointer;
    font-weight: 500;    
}

.new-dispatch-search-result:hover {
    background-color: #F3F3F3;
}

.new-dispatch-search-result.selected {
    background-color: #Af57E4;
    color: #FFF;
    font-weight: 700;
}

.new-dispatch-search-result i {
    color : #777;
}

.new-dispatch-search-result.selected i {
    color: #DDD;
}

#social-dispatch-calendar .calendar-wrapper {
    float: none;
    clear: both;
}

#social-dispatch-calendar .control-button {
    padding: 5px 8px;
    margin: 0px;
}

#social-dispatch-calendar .control-button:hover,
#social-dispatch-calendar .control-button:active,
#social-dispatch-calendar .control-button.active {
    color: #FFF;
    background-color: #333;
}

#social-dispatch-calendar .control-button.active {
    text-decoration: none;
}

#social-dispatch-calendar .control-button:active {
    margin: 0px;
    transform: none;
}

#edit-event-image {
    width: 100%;
    height: auto;
    object-fit: cover;
}

#edit-event-title {
    font-size: 20px;
    font-family: Georgia, serif;
    margin-top: 15px;
}

#lml-modal-edit-event .lml-modal-body .edit-event-details span {
    font-size: 13px;
    font-family: Arial;
    display: inline;
    color: #333;
}

#lml-modal-edit-event .lml-modal-body .edit-event-details {
    margin-top: 2px;
}

#lml-modal-edit-event .lml-modal-body .edit-event-site-details span {
    text-transform: uppercase;
    color: #999;
    font-size: 13px;
}

#lml-modal-edit-event .lml-modal-body .edit-event-site-details {
    margin-top: 8px;
}

#lml-modal-edit-event hr {
    border-top-color: #CCC;
    border-top-style: dashed;
    margin: 10px 0px;
}

#lml-modal-edit-event .lml-modal-body {
    padding-top: 0px;
}

h1 > a.fab {
    float: none;
    position: absolute;
    right: 15px;
    top: 66px;
    cursor: pointer;
}
</style>
`);};

module.exports = { compile };
