const settings = {
    title : "Publishing wizard",
    lmldom : { v : 1.0 },
    livevars : ["publishing.write.{?1}"]
};

const compile = (o, context) => { o(context.header, `

<div id="lml-wizard">
    <div class="liliumtext theme-minim liliumtext-spoof">
        <div id="post-template" class="liliumtext-editor">

        </div>
    </div>

    <div id="post-actions">
        <div id="post-action-text">
            Click on any element in the preview panel
        </div>

        <div id="elem-info">
            <div class="card">
                <b id="elem-node">---</b>
                <b id="elem-desc">---</b>
                <p id="elem-details">---</p>
            </div>

            <div class="card" id="about-elem">
                <b>About this element</b>
                <p>
                    <i class="far fa-font"></i>
                    <span id="elem-wordcount"></span>
                </p>
                <p>
                    <i class="far fa-arrows"></i>
                    <span id="elem-movable"></span>
                </p>    
                <p>
                    <i class="far fa-trash-alt"></i>
                    <span>This element can be removed.</span>
                </p>    
                <p>
                    <i class="far fa-link"></i>
                    <span id="elem-totallinks"></span>
                </p>    
            </div>

            <div class="card" id="elem-actions">
                <b>Edit this element</b>
                <div>
                    <div class="card-button" id="act-edit">
                        <i class="far fa-pencil"></i>
                        <span>Edit text</span>
                    </div>
                    <div class="card-button" id="act-insert-ad">
                        <i class="far fa-usd-square"></i>
                        <span>Insert ad after</span>
                    </div>
                    <div class="card-button" id="act-move-down">
                        <i class="fas fa-long-arrow-down"></i>
                        <span>Move down</span>
                    </div>
                    <div class="card-button" id="act-move-up">
                        <i class="fas fa-long-arrow-up"></i>
                        <span>Move up</span>
                    </div>
                    <div class="card-button red" id="act-remove">
                        <i class="far fa-trash-alt"></i>
                        <span>Remove</span>
                    </div>
                </div>
            </div>

            <div class="card" id="wizard-actions">
                <b>Wizard</b>
                <div>
                    <div class="card-button" id="act-back">
                        <i class="far fa-undo"></i>
                        <span>Discard changes</span>
                    </div>
                    <div class="card-button blue" id="act-save">
                        <i class="far fa-cloud-upload"></i>
                        <span>Save and exit</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" type="text/css" href="/compiled/theme/liliumtext.css">
<style>

#post-actions {
    background: #f6f6f6;
    width: calc(100% - 680px);
    overflow-y: auto;
    position: fixed;
    top: 128px;
    right: 0px;
    bottom: 0;
}

#post-action-text {
    display: block;
    margin-top: 100px;
    text-align: center;
    font-size: 36px;
    padding: 0px 40px;
    color: #a699b1;
    font-weight: bold;
}

#elem-info {
    display: none;
    padding: 12px;
}

#lml-wizard {
    position: relative;
}

#lilium .liliumtext.theme-minim #post-template {
    width: 640px;
    overflow-y: auto;
    position: fixed;
    top: 128px;
    left: 40px;
    bottom: 0;
    box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.2);
    background: #fff;
    padding: 0;
    z-index: 10;
}

#post-template img {
    width: 100%;
    height: auto;
}

#post-template .post-template-page > * {
    padding: 10px;
    margin: 10px;
    cursor: pointer;

    -webkit-touch-callout: none;
      -webkit-user-select: none;
       -khtml-user-select: none;
         -moz-user-select: none;
          -ms-user-select: none; 
              user-select: none; 
}

#lilium .liliumtext.theme-minim .liliumtext-editor .post-template-page hr,
#lilium #post-template .post-template-page > hrÂ {
    padding: 0px;
    height: 0px;
    border: 3px solid #999;
    background: transparent;
    border-radius: 0;
    margin: 10px 20px;
}

#post-template .post-template-page > *:hover {
    background-color: #F6F6F6;
    box-shadow: 0px 1px 2px rgba(0,0,0,0.3);
}

#post-template .post-template-page > .selected {
    background-color: #f6f3f9;
    box-shadow: 0px 1px 2px rgba(0,0,0,0.3);
}

#lilium .liliumtext.theme-minim .liliumtext-editor .post-template-page .instagram-media {
    pointer-events: all;
}

#post-template .post-template-page:not(:first-child):before {
    content : attr(data-textheader);
    display: block;
    border-top: 1px solid #DDD;
    border-bottom: 1px solid #DDD;
    background: #F6F6F6;
    padding: 20px;
    font-family: "Oswald", sans-serif;
}

.card {
    margin-bottom: 12px;
    background: #FFF;
    padding: 12px;
    border: 1px solid #F6F6F6;
    box-shadow: 0px 1px 2px rgba(0,0,0,0.3);
    position: relative;
}

#elem-node {
    display: block;
    font-size: 52px;
    font-weight: 100;
    color: #333;
    position: absolute;
    right: 12px;
}

#elem-desc {
    margin-top: 2px;
    display: block;
    font-weight: bold;
    font-size: 20px;
}

#elem-details {
    margin-top: 45px;
    display: block;
    line-height: 25px;
    font-size: 19px;
}

#about-elem i {
    font-size: 18px;
    display: inline-block;
    vertical-align: middle;
    width: 22px;
}

#about-elem span {
    font-size: 15px;
    display: inline-block;
    vertical-align: middle;
}

.card-button {
    margin-top: 10px;
    margin-right: 12px;
    padding: 12px 15px;
    background: #EEE;
    display: inline-block;
    box-shadow: 0px 1px 2px rgba(0,0,0,0.3);
    cursor: pointer;
    font-size: 14px;

    -webkit-touch-callout: none;
      -webkit-user-select: none;
       -khtml-user-select: none;
         -moz-user-select: none;
          -ms-user-select: none; 
              user-select: none; 
}

.card-button span {
    margin-left: 4px;
    vertical-align: middle;
    display: inline-block;
}

.card-button i {
    font-size: 15px;
    vertical-align: middle;
    display: inline-block;
}

.card-button.red {
    background: #ff5656;
    color: #FFF;
}

.card-button.blue {
    background: #4b73f1;
    color: #fff;
}

#act-save {
    display: none;
}

</style>

<script>

var repackageWizard = function() {
    var selected = document.querySelector('#post-template .selected');
    selected && selected.classList.remove('selected');
    
};

var saveAndExit = function() {
    repackageWizard();
    
    var content = Array.prototype.map.call(document.querySelectorAll('.post-template-page'), function(wrap) {
        return wrap.innerHTML;
    });

    liliumcms.lmldom.put({content:content}, "${context._c.server.url}/admin/publishing/save/" + liliumcms.pageloader.lastLevel, function(resp) {
        liliumcms.notify({ type : "success", title : "Post updated", message : "This article was successfully updated."});
        liliumcms.pageloader.load("${context._c.server.url}/admin/publishing/write/" + liliumcms.pageloader.lastLevel);
    });
};

var dismissPanel = function() {
    d.id('elem-info').get().style.display = "none";
    d.id('post-action-text').get().style.display = "block";
};

var CTXELEM;
var loadElem = function(el) {
    CTXELEM = el;

    var details = getElementDetails(el);
    var links = el.querySelectorAll('a');
    d.id('post-action-text').get().style.display = "none";
    
    document.getElementById('elem-node').textContent = "<" + (details.node.toLowerCase() || el.nodeName.toString().toLowerCase()) + ">";
    document.getElementById('elem-desc').textContent = details.description;
    document.getElementById('elem-details').textContent = details.details;
    document.getElementById('elem-wordcount').textContent = (el.textContent && el.textContent.trim() ? 
        ("This element contains " + el.textContent.split(' ').length + " words.") : 
        ("This element does not seem to contain any text."));

    document.getElementById('elem-movable').textContent =  (details.movable ? "It can be moved around." : "This element cannot be moved.");
    document.getElementById('elem-totallinks').textContent = links.length > 0 ? 
        ("There " + (links.length > 1 ? "are " : "is ") + links.length + " link" + (links.length > 1 ? "s" : "")) : 
        "There are no links in this element.";

    document.getElementById('act-edit').style.display = LIVE_EDITABLES_NODES.includes(details.node) ? "" : "none"; 

    d.id('elem-info').get().style.display = "block";

    if (details.movable) {
        document.getElementById('act-move-down').style.display = "";
        document.getElementById('act-move-up').style.display = "";
    } else {
        document.getElementById('act-move-down').style.display = "none";
        document.getElementById('act-move-up').style.display = "none";
    }

    var selected = document.querySelector('#post-template .selected');
    selected && selected.classList.remove('selected');
    el.classList.add('selected');
};

var removeElem = function() {
    var toFocus = CTXELEM.nextElementSibling || CTXELEM.previousElementSibling;
    CTXELEM.remove();

    document.getElementById('act-save').style.display = "inline-block";
    toFocus ? loadElem(toFocus) : dismissPanel();
};

var discardChanges = function() {
    liliumcms.pageloader.load("${context._c.server.url}/admin/publishing/write/" + liliumcms.pageloader.lastLevel);
};

var insertAdAfter = function() {
    var elem = document.createElement('div');
    elem.className = "lml-adplaceholder";
    elem.setAttribute('contenteditable', false);

    var next = CTXELEM.nextElementSibling;
    next ? CTXELEM.parentElement.insertBefore(elem, next) : CTXELEM.parentElement.appendChild(elem);
 
    document.getElementById('act-save').style.display = "inline-block";
    bindElem(elem);
}

var activateEdit = function() {
    if (CTXELEM.getAttribute('contenteditable')) {
        CTXELEM.dataset.originalec = CTXELEM.getAttribute('contenteditable');
    }

    CTXELEM.classList.add('liveedit');
    CTXELEM.setAttribute('contenteditable', true);
    CTXELEM.focus();
};

var moveElemDown = function() {
    if (CTXELEM.nextElementSibling) {
        CTXELEM.parentElement.insertBefore(CTXELEM.nextElementSibling, CTXELEM);
        document.getElementById('act-save').style.display = "inline-block";
    }
};

var moveElemUp = function() {
    if (CTXELEM.previousElementSibling) {
        CTXELEM.parentElement.insertBefore(CTXELEM, CTXELEM.previousElementSibling);
        document.getElementById('act-save').style.display = "inline-block";
    }
};

var bindElem = function(el) {
    if (el.addEventListener) {
        el.addEventListener('click', function(ev) {
            loadElem(ev.currentTarget);
        });

        el.addEventListener('blur', function(ev) {
            ev.currentTarget.classList.remove('liveedit');

            ev.currentTarget.dataset.originalec ?
                ev.currentTarget.setAttribute('contenteditable', ev.currentTarget.dataset.originalec) :
                ev.currentTarget.removeAttribute('contenteditable');

            document.getElementById('act-save').style.display = "inline-block";
        });
    }
}

var LIVE_EDITABLES_NODES = ["P", "H3", "UL", "OL"];
liliumcms.lmldom.bind(function() {
    var content = liliumcms.livevars.livevars()["publishing.write." + liliumcms.pageloader.lastLevel].content;
    var template = document.getElementById('post-template');

    for (var i = 0; i < content.length; i++) {
        var parser = document.createElement('div');
        parser.innerHTML = content[i];

        var newwrap = document.createElement('div');
        newwrap.dataset.index = i;
        newwrap.dataset.textheader = "Page " + (i+1);
        newwrap.className = "post-template-page";
        while (parser.firstChild) {
            var el = parser.firstChild;
            newwrap.appendChild(el);
            bindElem(el);
        }

        var links = newwrap.querySelectorAll('a, iframe');
        Array.prototype.forEach.call(links, function(a) { a.addEventListener('click', function(ev) { ev.preventDefault(); return false; }); })

        template.appendChild(newwrap);
    }

    document.getElementById('act-remove').addEventListener('click', removeElem);
    document.getElementById('act-edit').addEventListener('click', activateEdit);
    document.getElementById('act-insert-ad').addEventListener('click', insertAdAfter);
    document.getElementById('act-move-down').addEventListener('click', moveElemDown);
    document.getElementById('act-move-up').addEventListener('click', moveElemUp);
    document.getElementById('act-save').addEventListener('click', saveAndExit);
    document.getElementById('act-back').addEventListener('click', discardChanges);
});

</script>
    
`); }

module.exports = { settings, compile };
