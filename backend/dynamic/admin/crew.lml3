const settings = {
    livevars : [],
    petals : [],
    lmldom : {
        v : 1.0,
        features : []
    },
    title : "Crew members"
}; 

const preload = (context, done) => {
    let spin = context.ds.HUE_SPIN;
    context.css = "<style>";

    for (let i = 1; i <= context.ds.BADGE_LEVEL_TEXT.length; i++) {
        context.css += ` .level-${i} { filter: hue-rotate(${spin*i}deg); } `;
    }

    context.libs.fileio.readFile(context.workdir + "/crew.css", (ctn) => {
        context.css += ` ${ctn}</style>`;
        done();
    }, false, 'utf8');
};

const compile = (o, context) => {
    o(context.header, context.css, `

    <lml:bunch>
        <lml:bunchfilters>
            <div class="bunch-filters">
                <div class="bunch-filters-title">FILTERS</div>
                <label>Search</label>
                <input type="text" name="search" placeholder="Username, Name, Email" />
            </div>
        </lml:bunchfilters>

        <lml:bunchitem>
            <div class="crew-member-card">
                <div class="crew-member">
                    <lml:link href="${context._c.server.url}/admin/crew/view/{member._id}">
                        <div class="crew-card-top">
                            <lml:image src="{member.avatarURL}"></lml:image> 
                            <h3><lml:text var="member.displayname"></lml:text></h3>
                        </div>
                    </lml:link>
                    <div class="crew-card-middle">
                        <lml:filter if="hasSelectedPerso">
                            <div>
                                <i class="fa fa-lightbulb-o" style="font-size:18px;"></i> 
                                <lml:text var="member.personality.displayname"></lml:text> personality
                            </div>
                        </lml:filter>
                        <lml:filter if="hasArticles">
                            <div>
                                <i class="fa fa-paper-plane"></i> 
                                <lml:text var="member.articles"></lml:text> Articles published
                            </div>
                        </lml:filter>
                    </div>
                    <div class="crew-card-bottom">
                        <div class="crew-card-social">
                            <lml:generate call="generateSocials"></lml:generate>
                        </div>
                        <div class="crew-card-badges">
                            <lml:foreach var="badge" in="member.badges" wrapper="span">
                                <lml:class classes="badge.classes" tag="i">
                                </lml:class>
                            </lml:foreach>
                        </div>
                    </div>
                </div>
            </div>
        </lml:bunchitem>

        <script type="lmljson" name="chainsbunch">
            {
                "datasource" : "crew.bunch",
                "loopvar" : "member"
            }
        </script>
    </lml:bunch>
    <script>
        window.hasArticles = function(__, ldContext) { return ldContext.member.articles != 0; }
        window.hasSelectedPerso = function(__, ldContext) { return ldContext.member.personality.code != "none"; }
        window.generateSocials = function(ldContext) {
            var social = ldContext.member.socialnetworks || [];
            var wrap = document.createElement('div');

            for (var i = 0; i < social.length; i++) {
                var network = social[i];
                var link = document.createElement('a');
                var sw = document.createElement('i');
                link.appendChild(sw);
                link.href = network.link;
                link.target = "_blank";

                sw.className = network.icon;
                sw.style.backgroundColor = network.color;
                sw.style.border = "1px solid " + network.border;

                wrap.appendChild(link);
            }

            return wrap;
        };
    </script>

    `);
};

module.exports = { settings, preload, compile };
