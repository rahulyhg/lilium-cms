const settings = {
    lmldom : { v : 1.0 }
};

const compile = (o, context) => { o(context.header, `

<canvas id="playground"></canvas>

<style>

#playground {
    position: fixed;
    top: 0;
    left : 0;
    z-index: 25000;
}

</style>

<script>

var shapes = [
    { x : window.innerWidth, vel : -10, color : "#B372C6" },
    { x : window.innerWidth + 320, vel : -15, color : "#5332A6" },
    { x : window.innerWidth + 620, vel : -3, color : "#3322C6" },
    { x : window.innerWidth + 920, vel : -4, color : "#3322C6" }
];

var resizeCanvas = function() {
    var canvas = document.getElementById('playground');
    canvas.width = window.innerWidth;
    canvas.height= window.innerHeight;

    canvas.style.width = canvas.width + "px";
    canvas.style.height = canvas.height + "px";
}

var ctx;
window._animationRunning = false;
var draw = function() {
    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);

    for (var i = 0; i < shapes.length; i++) {
        var shape = shapes[i];

        ctx.fillStyle = shape.color;
        ctx.beginPath();
        ctx.moveTo(shape.x, 0);
        ctx.lineTo(shape.x, window.innerHeight);
        ctx.lineTo(shape.x + window.innerWidth - 100, window.innerHeight);
        ctx.lineTo(shape.x + window.innerWidth - 100, 0);
        ctx.closePath();
        ctx.fill();

        shape.x += shape.vel;
    }

    window._animationRunning && window.requestAnimationFrame(draw);
};

var startAnimation = function() {
    window._animationRunning = true;
    window.requestAnimationFrame(draw);
};

liliumcms.lmldom.bind(function() {
    ctx = document.getElementById('playground').getContext("2d");
    resizeCanvas();
    startAnimation();
});
</script>


`);};

module.exports = { settings, compile };
