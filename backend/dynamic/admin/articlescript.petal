{#config;postleaf}
<script>
    var isAutoSave = false;
    var timer;
    var lastSave;
    var _id;
    var contentid;
    var lastParamUrl = window.location.pathname.split('/').pop();
    var publishButtonText = "";
    var deleteID;
    var idFromURL = document.location.href.substring(document.location.href.lastIndexOf('/') + 1);
    var isPublished = false;
    var originalTitle = "";    
    var currentSlug = "";

    var articleEdit = {
        keepURL : true,
        urlWillChangeWarningShown : false
    };

    if (true || !window.lmlarticlebound) {
        window.lmlarticlebound = true;
        liliumcms.lmldom.bind(function() { 
            var content = liliumcms.livevars.livevars()['content.' + liliumcms.pageloader.lastLevel];
    
            if (content) {
                isAutoSave    = content.status == 'autosaved';
                isPublished   = content.status == 'published';
                originalTitle = content.title;
                currentSlug   = content.name;

                if (isAutoSave) {
                    _id = lastParamUrl;
                    contentid = content.contentid;
                } else {
                    contentid = lastParamUrl == 'edit' || lastParamUrl == 'new' ? undefined : lastParamUrl;
                }

                if (isPublished) {
                    $('.article_base_title').bind('keyup', function(e) {
                        if (!articleEdit.urlWillChangeWarningShown && originalTitle !== $('.article_base_title').val()) {
                            articleEdit.urlWillChangeWarningShown = true;
                            $('#urlchanged-modal').modal('show');
                        }
                    });

                    $('#button-update-url').bind('click', function() {
                        articleEdit.keepURL = false;
                        $('#urlchanged-modal').modal('hide');
                    });

                    $('#button-keep-url').bind('click', function() {
                        articleEdit.keepURL = true;
                        $('#urlchanged-modal').modal('hide');
                    });
                }

                // You can't have a draft if article is published
                if (content.status == 'published') {
                    $('form button[name=save]').hide();
                }

                if (content.status != "reviewing") {
                    $('form button[name=refuse]').hide();
                }

                if (content.status == "published" || content.status == "reviewing") {
                    $('form button[name=send]').hide();

                    if (liliumcms.rights.hasRole('contributor')) {
                        $('form button[name=save]').hide();
                    }
                }

                if (!liliumcms.rights.hasRole('contributor')) {
                    $('form button[name=send]').hide();
                }

                document.getElementById("article-edit-slug-button").addEventListener('click', function() {
                    liliumcms.modals.get("article-slug-edit").cast();
                });

                {$
                    postleaves = postleaf.all();
                $}

                {$ for (leaf in postleaves); $}
                if (window.{=leaf.backendload}) {
                    window.{=leaf.backendload}();
                }   
                {$ endfor; $}

                updateBottomSection();
            }
        });

        document.addEventListener('livevarsRendered', function(e) {
            lastSave = $('form').serialize();
        });

        document.addEventListener('lmlnotification', function(event, notification) {
            enablePublishButton();
        });
    }

    var buildReport = function(data) {
        var g = function(elem, str) { document.getElementById("prep-" + elem).textContent = str; };
                
        g('title', data.article.title);
        g('subtitle', data.article.subtitle);
        g('adsinserted', data.article.score.ads);
        g('sponsored', data.article.isSponsored || "not ");
        g('pagecount', data.article.score.pages ? ("Paginated on " + data.article.score.pages + " pages") : "Not paginated");
        g('paragcount', data.article.score.paragraphs);
        g('imagescount', data.article.score.images);

        var link = document.getElementById('prep-fullurl');
        link.href = data.article.url;
        link.textContent = data.article.url;

        g('authorname', data.author.fullname);
        g('authortotal', data.author.totalCount);
        g('authortoday', data.author.totalToday);

        document.getElementById('prep-image').src = data.article.featuredimage;
        document.getElementById('prep-authorimage').src = data.author.avatarURL;

        return {
            show : function() {
                if (window.innerWidth < 1000) return;

                document.getElementById("publishreport").classList.remove("hidden");
                setTimeout(function() {
                    document.getElementById("publishreport").classList.add('shown');
                    setTimeout(function() {
                        document.getElementById('prep-wrapper').classList.add('shown');
                    }, 100);
                }, 10);
            }
        };
    };

    var dismissReport = function() {
        document.getElementById("prep-wrapper").classList.remove("shown");
        document.getElementById('publishreport').classList.remove('shown');
        setTimeout(function() {
            document.getElementById('publishreport').classList.add('hidden');
        }, 100);
    }

    var enablePublishButton = function() {
        pubBtn = $('button[name="publish"]').get(0);

        if (pubBtn) {
            pubBtn.classList.remove("waitingForConfirmation");
            pubBtn.disabled = false;
            pubBtn.innerHTML = publishButtonText;
        }
    };

    var unpublishArticleModal = function(id) {    
        deleteID = id;
        $('#confirm-unpublish').modal('show');
        return false;
    };
    
    var destroyArticleModal = function(id) {    
        deleteID = id;
        $('#confirm-destroy').modal('show');
        return false;
    };

    var unpublishArticle = function() {
        var deleteID = contentid;
        $.post('{=config.default.server.url}/admin/article/delete/' + deleteID, {}, function(data) {
            if (data.success && data.redirect) {
                $('#confirm-destroy').modal('hide');
                liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
            } else {
                alert('There was an error deleting this post.');
            }
        });
    };

    var destroyAutosave = function(deleteID) {
        $(".article-destroy-button-wrapper button").get(0).disabled = true;
        var deleteID = contentid;
        $.post('{=config.default.server.url}/admin/article/delete-autosave/' + deleteID, {}, function(data) {
            if (data.success && data.redirect) {
                $('#confirm-destroy').modal('hide');
                liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
            } else {
                alert('There was an error deleting this autosave.');
            }
        });
    };

    var destroyArticle = function() {
        var deleteID = contentid;
        $.post('{=config.default.server.url}/admin/article/destroy/' + deleteID, {}, function(data) {
            if (data.success && data.redirect) {
                $('#confirm-destroy').modal('hide');
                liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
            } else {
                alert('There was an error destroying this post.');
            }
        });
    };

    var sendForReview = function() {
        $("#confirm-send-for-review .btn-primary").get(0).disabled = true;
        $.post('{=config.default.server.url}/admin/article/sendforreview/' + contentid, {}, function() {
            $('#confirm-send-for-review').modal('hide');
            liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
        });
    };

    var refuseReview = function() {
        $.post('{=config.default.server.url}/admin/article/refusereview/' + contentid, {}, function() {
            liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
        });
    };

    var updateBottomSection = function() {
        $.get('{=config.default.server.url}/admin/article/infostrip/' + contentid + '?async=false', function(resp) {
            document.getElementById('moreinfo-status').textContent = resp["status"];
            document.getElementById('moreinfo-status').className = "article-status-" + resp.status;
            document.getElementById("moreinfo-modcount").textContent = resp.modifications;

            isPublished = resp.status == "published";

            try {
                document.getElementById('moreinfo-updated').textContent = dateFormat(resp["updated"], "d/mm/yyyy 'at' hh:MM");
            } catch (typeex) {
                document.getElementById('moreinfo-updated').textContent = resp["updated"];
            }

            document.getElementById("moreinfo-alias").innerHTML = "";
            if (resp.aliases.length != 0) {
                for (var i = 0; i < resp.aliases.length; i++) {
                    var a = document.createElement('a');
                    a.textContent = resp.siteurl + "/" + resp.aliases[i] + " ";
                    a.href = resp.siteurl + "/" + resp.aliases[i];
                    a.setAttribute('target', '_blank');
                    a.dataset.alias = resp.aliases[i];

                    document.getElementById("moreinfo-alias").appendChild(a);

                    var rem = document.createElement('i');
                    rem.className = "fa fa-times remove-alias-ex";
                    rem.setAttribute('aria-hidden', "true");

                    (function(a) {
                        rem.addEventListener('click', function() {
                            liliumcms.lmldom.sendForm(
                                {articleid : liliumcms.pageloader.lastLevel, alias : a.dataset.alias}, 
                                "{=config.default.server.url}/admin/article/removealias",
                            function(resp) {
                                log("Article", "Removed alias from article");
        
                                if (resp && resp.success) { 
                                    a.parentElement.removeChild(a);
                                    liliumcms.notify({title : "Alias", message : "Removed alias successfully", type : "success"})
                                } else {
                                    liliumcms.notify({title : "Alias", message : "Missing rights", type : "danger"});
                                }
                            });


                            this.parentElement.removeChild(this);

                        });
                    })(a);

                    document.getElementById("moreinfo-alias").appendChild(rem);

                    if (i != resp.aliases.length - 1) {
                        var sep = document.createElement('span');
                        sep.textContent = ", ";
                        document.getElementById("moreinfo-alias").appendChild(sep);
                    }
                }
            } else {
                document.getElementById("moreinfo-alias").textContent = "This article has only one URL";
            }

            document.getElementById('moreinfo-author').textContent = resp["author"];
            document.getElementById('moreinfo-url').innerHTML = "";
            document.getElementById('article-slug-edit-value').value = resp.name;
            if (!resp.url || resp.url.indexOf('//') == -1) {
                document.getElementById('moreinfo-url').textContent = resp.url;
            } else {
                var a = document.createElement('a');
                a.href = resp.url;
                a.textContent = resp.url;
                a.setAttribute('target', '_blank');

                document.getElementById('moreinfo-url').appendChild(a);
            }

            var buttons = document.querySelectorAll('.article-button-wrapper');
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].style.display = "none";
            }

            if (resp.status == "published") {
                document.querySelector('.article-delete-button-wrapper').style.display = "";
                document.querySelector('.article-schedule-button-wrapper').style.display = "";
            } else if (resp.status == "autosaved") {
                document.querySelector('.article-destroyautosave-button-wrapper').style.display = "";
            } else {
                document.querySelector('.article-destroyarticle-button-wrapper').style.display = "";
            }

            document.querySelector('.article-history-button-wrapper').style.display = "";

            // Facebook schedule
            var hasDispatch = resp.socialdispatch && resp.socialdispatch.length != 0;
            var hasSchedule = false;
            if (hasDispatch) {
                for (var i = 0; i < resp.socialdispatch.length; i++) {
                    if (resp.socialdispatch[0].status == "scheduled") {
                        hasSchedule = true;
                        break;
                    }
                }
            }

            if (hasSchedule) {
                document.getElementById("social-dispatch-schedules").firstElementChild.textContent = 
                    "This post is scheduled to be posted on social media";
                document.getElementById("social-dispatch-status").textContent = "Scheduled";
            } else {
                document.getElementById("social-dispatch-schedules").firstElementChild.textContent = 
                    "There are no schedules for this post";
                document.getElementById("social-dispatch-status").textContent = "Not scheduled";
            }

            var sList = document.getElementById('social-dispatch-schedule-list');
            while (sList.firstElementChild) {
                sList.firstElementChild.remove();
            }

            if (hasDispatch) {
                for (var i = 0; i < resp.socialdispatch.length; i++) {
                    var dispatch = resp.socialdispatch[i];
                    var nel = document.createElement('div');
                    var valid = true;
                    nel.className = "social-dispatch-schedule";

                    var when = new Date(dispatch.time);
                    if (dispatch.status == "scheduled") {
                        nel.textContent = "This post will go live at : " + 
                            dateFormat(when, "HH:MM") + " on " + 
                            dateFormat(when, "dd/mm/yyyy");
                    } else if (dispatch.status == "published") {
                        nel.textContent = "This article was posted at : " +
                            dateFormat(when, "HH:MM") + " on " + 
                            dateFormat(when, "dd/mm/yyyy");
                    } else {
                        valid = false;
                    }

                    if (valid) {
                        sList.appendChild(nel);
                    }
                }
            }
        });
    };

    var loadArticleHistory = function() {
        liliumcms.pageloader.load(window.location.urlBase + "admin/history/article/" + contentid);
    };

    var autoSave = function() {
            timer.pause();
            var currentSave = $('form').serialize();

            // Save only if content has changed
            if (lastSave != currentSave && $('.article_base_title').val().trim() != "" && $('textarea[name="content"]').val() != "") {
                var tempSave = currentSave + '&_id=' + _id + '&contentid=' + contentid;

                $.post('{=config.default.server.url}/admin/article/autosave', tempSave, function(data) {
                    lastSave = currentSave;

                    if (data.success && data._id) {
                        _id = data._id;
                    }

                    if ($('.cke_bottom .status').size() == 0) {
                        $('.cke_bottom').append('<span class="status">Last saved : <time class="date timeago" datetime="' + new Date().toString() + '">' + new Date() + '</time></span>');
                    }

                    $(".cke_bottom time.timeago").timeago("update", new Date());

                });
            } else {
                console.log("Skipping auto-save");
            }
    };


    $(document).ready(function() {
        // Will be edit, new or an id
        // Check if we can get an id
        timer = $.timer(function() {
            if (!isPublished) { autoSave(); }
        }, 60 * 1000, true);


        window.addEventListener("beforeunload", function(e) {
            if (lastSave !== $('form').serialize()) {

                var confirmationMessage = 'It looks like you have been editing something. ' +
                    'If you leave before saving, your changes will be lost.';

                (e || window.event).returnValue = confirmationMessage; //Gecko + IE
                return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
            }
        });

        if (CKEDITOR) {
            CKEDITOR.on('instanceReady', function() {
                CKEDITOR.instances.content.on('focus', function() {
                    if (timer) {
                        timer.play();
                    }
                });

                CKEDITOR.instances.content.on('blur', function() {
                    if (document.activeElement === document.getElementsByTagName("iframe")[0]) {
                        if (timer) {
                            timer.pause();
                        }
                    }
                });
            });
        }

        // Save Draft
        $('form button[name=save]').on('click', function(e) {
            document.dispatchEvent(new CustomEvent("articleWillSave"));

            // Save and give notification
            var currentSave = liliumcms.lmldom.getFormData().post_create.values;
            var url;
            var tempsave = currentSave;

            url = '/save';
            tempsave._id = contentid;
            tempsave.autosaveid = _id;

            liliumcms.lmldom.sendForm(tempsave, '{=config.default.server.url}/admin/article' + url, function(data) {
                lastSave = currentSave;

                if (data.success && data.redirect) {
                    liliumcms.pageloader.load(data.redirect);
                }

                if (data.success && data._id) {
                    contentid = data._id;
                }

                if ($('.cke_bottom .status').size() == 0) {
                    $('.cke_bottom').append('<span class="status">Last saved : <time class="date timeago" datetime="' + new Date().toString() + '">' + new Date() + '</time></span>');
                }

                liliumcms.notify({
                    title: 'Article',
                    message: 'Your draft is saved',
                    type: 'success'
                });

                updateBottomSection();
                $(".cke_bottom time.timeago").timeago("update", new Date());
            });

            return false;
        });

        $('form button[name=preview]').on('click', function(e) {
            // Open in new tab
            var btn = this;
            var textinside = btn.innerHTML;
            btn.innerHTML = "loading...";
            btn.disabled = true;

            document.dispatchEvent(new CustomEvent("articleWillPreview"));

            liliumcms.previewer.cast(document.querySelector("input[name=title]").value);
            var formdat = liliumcms.lmldom.getFormData().post_create.values; 
            formdat.id = contentid;

            $.post('{=config.default.server.url}/admin/article/preview', formdat, function(html) {
                liliumcms.previewer.setContent(html);
                btn.disabled = false;
                btn.innerHTML = textinside;
            });
        });

        $('form button[name=publish]').on('click', function(e) {
            if (isPublished) {
                publishCurrentArticle();
            } else {
                // Ask for confirmation
                $('#confirm-publish').modal('show');
            }

            return false;
        });

        $('.btn-send-for-review').bind('click', function() {
            $('#confirm-send-for-review').modal('show');
        });

        var curConfirmTimeout;
        var publishCurrentArticle = function(e) {
            $('#confirm-publish').modal('hide');

            var valid = true || liliumcms.formvalidator.validate($('form#post_create'));
            var form = liliumcms.lmldom.getFormData().post_create;
            var tempForm = form;

            tempForm.values.id = contentid;
            tempForm.values.autosaveid = _id;

            if (!tempForm.values.topic) {
                return liliumcms.notify({title : "Watch out!", message : "You forgot to assign a topic.", type : "info"});
            }

            if (valid) {
                $('.alert-wrapper').remove();

                document.dispatchEvent(new CustomEvent("articleWillPublish"));
    
                var pubBtn = $('button[name="publish"]').get(0);
                pubBtn.disabled = true;
                publishButtonText = pubBtn.innerHTML;
                pubBtn.innerHTML = "Publishing...";
                pubBtn.classList.add("waitingForConfirmation");

                if (articleEdit.urlWillChangeWarningShown) {
                    tempForm.values._keepURL = articleEdit.keepURL;
                } else if (isPublished) {
                    tempForm.values._keepURL = true; 
                }

                if (currentSlug) {
                    tempForm.values.currentSlug = currentSlug;
                }
    
                liliumcms.lmldom.sendForm(tempForm.values, '{=config.default.server.url}/admin/article/edit', function(data) {
                    if (data.success) {
                        lastSave = form;
                        
                        if (data.redirect) {
                            liliumcms.pageloader.load(data.redirect);
                        }

                        if (data.newlyPublished) {
                            liliumcms.livevars.getSingleLivevar('content.publishreport.' + contentid, {}, function(resp) {
                                if (resp.response.code == 200) {
                                    log('Content', 'Received publication report for article with id ' + contentid);
                                    var report = resp.livevars['content.publishreport.' + contentid];
                                    buildReport(report).show();
                                    
                                } else {
                                    log('Content', 'Received empty publication report for article with id ' + contentid);
                                }
                            });
                        }

                        pubBtn.innerHTML = "Generating article...";
                        updateBottomSection();

                        curConfirmTimeout && clearTimeout(curConfirmTimeout);
                        curConfirmTimeout = setTimeout(function() {
                            if (pubBtn.classList.contains("waitingForConfirmation")) {
                                liliumcms.notify( {type : "warning", title : "Weird.", message : "Server could not notify you for some reason, but the article was still published successfully, and should be online."});
                                enablePublishButton();
                            }
                        }, 15000);
                    }
                });
            } else {
                liliumcms.notify({title : "Could not publish", message : "Some required fields are missing."});
            } 
        };


        $('#confirm-publish button.btn-primary').on('click', function(e) {
            publishCurrentArticle(e);
        });

        $('#confirm-unpublish button.btn-danger').on('click', function() {
            unpublishArticle();
        });

        $('#confirm-destroy button.btn-danger').on('click', function() {
            destroyArticle();
        });

        $('#confirm-send-for-review button.btn-primary').bind('click', sendForReview);
        
        $('.btn-refuse-review').bind('click', refuseReview);
    });

    window["article-slug-edit_accept"] = function() {
        var newSlug = document.getElementById('article-slug-edit-value').value;
        liliumcms.lmldom.sendForm({slug : newSlug}, '{=config.default.server.url}/admin/article/editslug/' + contentid, function(resp) {
            if (resp.success) {
                liliumcms.notify({type : "success", message : "Slug updated"});
                liliumcms.modals.get("article-slug-edit").dismiss();
                updateBottomSection();
            } else {
                liliumcms.notify({type : "danger", message : resp.error});
            }
        });
    }

    window["dlg-facebook-schedule_accept"] = function(modal) {
        var dat = modal.getFormData();
        if (dat.pageid && dat.postcaption && dat.postdate) {
            var time = dat.postdate.getTime();
            liliumcms.lmldom.sendForm(
                {
                    postid : contentid,
                    pageid : dat.pageid,
                    message : dat.postcaption,
                    time : time
                },
                "{=config.default.server.url}/admin/socialdispatch/schedule",
            function(resp) {
                updateBottomSection();
                liliumcms.notify({
                    type : "log",
                    title : "Facebook Graph",
                    message : "Your publication request is being processed."
                });
            });

            modal.dismiss();
        } else {
        }
    }

    var loadScheduleFacebookDialog = function() {
        liliumcms.modals.get("dlg-facebook-schedule").cast();
    };
</script>

<div id="confirm-publish" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Publish</h4>
            </div>
            <div class="modal-body">
                <p>Publishing an article makes it visible to everyone. Ready?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-primary">Yes, go live!</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="confirm-send-for-review" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Send article for review</h4>
            </div>
            <div class="modal-body">
                <p>Once your article is sent for review, you won't be able to modify it anymore. Proceed?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-primary">Send it!</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->


<div id="confirm-unpublish" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Unpublish</h4>
            </div>
            <div class="modal-body">
                <p>Unpublishing does not delete the article, but removes it from the website.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-danger">Unpublish</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="confirm-destroy" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Destroy article</h4>
            </div>
            <div class="modal-body">
                <p>Destroying an article removes it from the list. This process is irreversible.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-danger">Destroy</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="urlchanged-modal" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Title was changed after publishing</h4>
            </div>
            <div class="modal-body">
                <p>The URL will be changed. Would you like to keep the same URL, or update it with the new title?</p>
                <p>If you update the URL, the old one will still work but the new page will lose its Facebook shares.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-primary" id="button-update-url">Update it</button>
                <button type="button" class="" id="button-keep-url">Keep it</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="publishreport" class="hidden">
    <div id="prep-wrapper">
        <img src="" id="prep-image" />
        <div class="prep-top">
            <span id="prep-bigtitle">Article published</span>
            <span id="prep-title"></span>
            <span id="prep-subtitle"></span>
        </div>
        <div class="prep-stats">
            <div class="prep-stat"><i class="fa fa-money"></i> <span id="prep-adsinserted"></span> ads inserted</div>
            <div class="prep-stat"><i class="fa fa-handshake-o"></i> Article is <span id="prep-sponsored"></span>sponsored</div>
            <div class="prep-stat"><i class="fa fa-columns"></i> <span id="prep-pagecount"></span></div>
            <div class="prep-stat"><i class="fa fa-paragraph"></i> <span id="prep-paragcount"></span> paragraph blocks</div>
            <div class="prep-stat"><i class="fa fa-picture-o"></i> <span id="prep-imagescount"></span> images</div>
            <div class="prep-stat"><i class="fa fa-globe"></i> Full URL : <a id="prep-fullurl" target="_blank"></a></div>
        </div>
        <div class="prep-author">
            <img src="" id="prep-authorimage" />
            <div class="prep-authorsection">
                <div class="prep-authortitle">Written by <span id="prep-authorname"></span></div>
                <div class="prep-authorfield"><i class="fa fa-paper-plane-o"></i> <span id="prep-authortotal"></span> articles</div>
                <div class="prep-authorfield"><i class="fa fa-calendar-o"></i> <span id="prep-authortoday"></span> today</div>
            </div>
        </div>
        <div class="prep-footer">
            <button class="prep-dismiss btn" onclick="dismissReport();"><i class="fa fa-check"></i> Dismiss</button>
        </div>
    </div>
</div>

