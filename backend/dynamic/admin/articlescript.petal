{#config;postleaf;theme}
<script>
    var isAutoSave = false;
    var lastSave;
    var _id;
    var contentid;
    var lastParamUrl = window.location.pathname.split('/').pop();
    var publishButtonText = "";
    var deleteID;
    var idFromURL = document.location.href.substring(document.location.href.lastIndexOf('/') + 1);
    var isPublished = false;
    var originalTitle = "";    
    var currentSlug = "";

    var contentpages = [];
    var contenttitles = [];
    var contentsubtitles = [];

    var contentPageIndex = 0;

    var selectedTopic;

    var articleEdit = {
        keepURL : true,
        urlWillChangeWarningShown : false
    };

    if (true || !window.lmlarticlebound) {
        window.lmlarticlebound = true;
        liliumcms.lmldom.bind(function() { 
            var content = liliumcms.livevars.livevars()['content.' + liliumcms.pageloader.lastLevel];
    
            if (content) {
                isAutoSave    = content.status == 'autosaved';
                isPublished   = content.status == 'published';
                originalTitle = content.title[0];
                currentSlug   = content.name;
                selectedTopic = content.topic;
                contentpages  = content.content;
                contenttitle  = content.title;
                contentsubtitle = content.subtitle;
                lastSave = content.content;

                d.q("[name=contenteditor]").get().id = "contenteditor";
                d.q("[name=contenttitle]").get().id = "contenttitle";
                d.q("[name=contentsubtitle]").get().id = "contentsubtitle";

                CKEDITOR.replace("contenteditor", {
                    on: {
                        instanceReady: function( evt ) {
                            createTabs();
                        }
                    }
                });

                if (isAutoSave) {
                    _id = lastParamUrl;
                    contentid = content.contentid;
                } else {
                    contentid = lastParamUrl == 'edit' || lastParamUrl == 'new' ? undefined : lastParamUrl;
                }

                if (content.media) {
                    imgtag.value = content.media;
                    document.getElementById('mediapicker').value = content.media;

                    liliumcms.livevars.getSingleLivevar('uploads.single.' + content.media, {}, function(resp) {
                        try {
                            imgtag.src = resp.livevars["uploads.single." + content.media].sizes[
                                "{=?theme.info.featuredimage.sizename}" || "featured"
                            ].url;
                        } catch (ex) {
                            log('Content', 'Could not set featured image with id ' + content.media, 'err');
                        }
                    });
                }

                if (content.fulltopic) {
                    selectTopic(content.fulltopic);
                    d.id('topic-slide-1').get().style.display = "none";
                    d.id('topic-slide-2').get().style.display = "block";
                    d.id('topic-slide-2').cadd('shown');
                    d.id('topic-selection-done').cadd('shown');
                }

                bindPackagingPhase();                

                if (isPublished) {
                    articleEdit.keepURL = true;
                }

                // You can't have a draft if article is published
                if (content.status == 'published') {
                    $('form button[name=save]').hide();
                }

                if (content.status != "reviewing") {
                    $('form button[name=refuse]').hide();
                }

                if (content.status == "published" || content.status == "reviewing") {
                    $('form button[name=send]').hide();

                    if (liliumcms.rights.hasRole('contributor')) {
                        $('form button[name=save]').hide();
                    }
                }

                if (!liliumcms.rights.hasRole('contributor')) {
                    $('form button[name=send]').hide();
                }

                document.getElementById("article-edit-slug-button").addEventListener('click', function() {
                    liliumcms.modals.get("article-slug-edit").cast();
                });

                {$
                    postleaves = postleaf.all();
                $}

                {$ for (leaf in postleaves); $}
                if (window.{=leaf.backendload}) {
                    window.{=leaf.backendload}();
                }   
                {$ endfor; $}

                updateBottomSection();
            }
        });

        document.addEventListener('livevarsRendered', function(e) {
            lastSave = $('form').serialize();
        });
    }

    var localSave = function() {
        contentpages[contentPageIndex] = CKEDITOR.instances.contenteditor.getData();
        contenttitle[contentPageIndex] = d.id("contenttitle").value;
        contentsubtitle[contentPageIndex] = d.id("contentsubtitle").value;
    }

    var switchContentTab = function(index, initial) {
        d.q(".content-tab.selected").crm("selected");
        d.q(".content-tab-" + index).cadd("selected");
 
        !initial && localSave();

        CKEDITOR.instances.contenteditor.setData(contentpages[index]);
        d.id("contenttitle").get().value = contenttitle[index];
        d.id("contentsubtitle").get().value = contentsubtitle[index];

        CKEDITOR.instances.contenteditor.undoManager.reset();
        contentPageIndex = index;
    };

    var addContentTab = function() {
        var ct = d.id("content-tabs");
        makeContentTab(ct, contentpages.length);
        ct.born(d.q(".content-tab.content-tab-add"));
        contentpages.push("");
        contenttitle.push(contenttitle[0] + " - Page " + contentpages.length);
        contentsubtitle.push(contentsubtitle[0]);

        localSave();
        switchContentTab(contentpages.length - 1);
    };

    var makeContentTab = function(ct, i) {
        var tab = d.make({
            parent : ct,
            class : "content-tab " + (i == 0 ? "selected" : "") + " content-tab-" + i,
            text : i == 0 ? "Landing" : ("Page " + (i+1))
        })

        tab.get().dataset.index = i;
        tab.bind('click', function(ev) {
            switchContentTab(ev.target.dataset.index);
        });
    }

    var createTabs = function() {
        var ct = d.id('content-tabs');
        var total = contentpages.length;

        for (var i = 0; i < total; i++) {
            makeContentTab(ct, i);
        }

        var addtab = d.make({
            parent : ct,
            class : "content-tab content-tab-add",
            text : "+"
        });

        addtab.bind('click', addContentTab);
        switchContentTab(0, true);
    };

    var buildReport = function(data) {
        var g = function(elem, str) { document.getElementById("prep-" + elem).textContent = str; };
                
        g('title', data.article.title);
        g('subtitle', data.article.subtitle);
        g('adsinserted', data.article.score.ads);
        g('sponsored', data.article.isSponsored || "not ");
        g('pagecount', data.article.score.pages ? ("Paginated on " + data.article.score.pages + " pages") : "Not paginated");
        g('paragcount', data.article.score.paragraphs);
        g('imagescount', data.article.score.images);

        var link = document.getElementById('prep-fullurl');
        link.href = data.article.url;
        link.textContent = data.article.url;

        g('authorname', data.author.fullname);
        g('authortotal', data.author.totalCount);
        g('authortoday', data.author.totalToday);

        document.getElementById('prep-image').src = data.article.featuredimage;
        document.getElementById('prep-authorimage').src = data.author.avatarURL;

        return {
            show : function() {
                if (window.innerWidth < 1000) return;

                document.getElementById("publishreport").classList.remove("hidden");
                setTimeout(function() {
                    document.getElementById("publishreport").classList.add('shown');
                    setTimeout(function() {
                        document.getElementById('prep-wrapper').classList.add('shown');
                    }, 100);
                }, 10);
            }
        };
    };

    var dismissReport = function() {
        document.getElementById("prep-wrapper").classList.remove("shown");
        document.getElementById('publishreport').classList.remove('shown');
        setTimeout(function() {
            document.getElementById('publishreport').classList.add('hidden');
        }, 100);
    }

    var enablePublishButton = function() {
    };

    var updateFacebookPreview = function(article) {
        document.getElementById("facebook-package-image").src = document.getElementById('featured-image-tag').src;
        document.getElementById('facebook-package-title').textContent = article.facebooktitle || article.title[0];
        document.getElementById('facebook-package-subtitle').textContent = article.facebooksubtitle || article.subtitle[0];
        document.getElementById('facebook-package-site').textContent = "{=config.default.website.sitetitle}";
    };

    var unpublishArticleModal = function(id) {    
        deleteID = id;
        $('#confirm-unpublish').modal('show');
        return false;
    };
    
    var destroyArticleModal = function(id) {    
        deleteID = id;
        $('#confirm-destroy').modal('show');
        return false;
    };

    var unpublishArticle = function() {
        var deleteID = contentid;
        $.post('{=config.default.server.url}/admin/article/delete/' + deleteID, {}, function(data) {
            if (data.success && data.redirect) {
                $('#confirm-unpublish').modal('hide');
                updateBottomSection();
            } else {
                alert('There was an error deleting this post.');
            }
        });
    };

    var destroyAutosave = function(deleteID) {
        $(".article-destroy-button-wrapper button").get(0).disabled = true;
        var deleteID = contentid;
        $.post('{=config.default.server.url}/admin/article/delete-autosave/' + deleteID, {}, function(data) {
            if (data.success && data.redirect) {
                $('#confirm-destroy').modal('hide');
                liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
            } else {
                alert('There was an error deleting this autosave.');
            }
        });
    };

    var destroyArticle = function() {
        var deleteID = contentid;
        $.post('{=config.default.server.url}/admin/article/destroy/' + deleteID, {}, function(data) {
            if (data.success && data.redirect) {
                $('#confirm-destroy').modal('hide');
                liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
            } else {
                alert('There was an error destroying this post.');
            }
        });
    };

    var sendForReview = function() {
        liliumcms.modals.get('article-packaging').dismiss()
        $.post('{=config.default.server.url}/admin/article/sendforreview/' + contentid, {}, function() {
            document.body.classList.remove("block-scroll");
            $('#confirm-send-for-review').modal('hide');
            liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
        });
    };

    var refuseReview = function() {
        $.post('{=config.default.server.url}/admin/article/refusereview/' + contentid, {}, function() {
            liliumcms.pageloader.load("{=config.default.server.url}/admin/article");
        });
    };

    var updateBottomSection = function() {
        $.get('{=config.default.server.url}/admin/article/infostrip/' + contentid + '?async=false', function(resp) {
            document.getElementById('moreinfo-status').textContent = resp["status"];
            document.getElementById('moreinfo-status').className = "article-status-" + resp.status;
            document.getElementById("moreinfo-modcount").textContent = resp.modifications;
            document.getElementById('moreinfo-registered-shares').textContent = resp.shares;

            isPublished = resp.status == "published";

            try {
                document.getElementById('moreinfo-updated').textContent = dateFormat(resp["updated"], "d/mm/yyyy 'at' hh:MM");
            } catch (typeex) {
                document.getElementById('moreinfo-updated').textContent = resp["updated"];
            }

            document.getElementById("moreinfo-alias").innerHTML = "";
            if (resp.aliases.length != 0) {
                for (var i = 0; i < resp.aliases.length; i++) {
                    var a = document.createElement('a');
                    a.textContent = resp.siteurl + "/" + resp.aliases[i] + " ";
                    a.href = resp.siteurl + "/" + resp.aliases[i];
                    a.setAttribute('target', '_blank');
                    a.dataset.alias = resp.aliases[i];

                    document.getElementById("moreinfo-alias").appendChild(a);

                    var rem = document.createElement('i');
                    rem.className = "fa fa-times remove-alias-ex";
                    rem.setAttribute('aria-hidden', "true");

                    (function(a) {
                        rem.addEventListener('click', function() {
                            liliumcms.lmldom.sendForm(
                                {articleid : liliumcms.pageloader.lastLevel, alias : a.dataset.alias}, 
                                "{=config.default.server.url}/admin/article/removealias",
                            function(resp) {
                                log("Article", "Removed alias from article");
        
                                if (resp && resp.success) { 
                                    a.parentElement.removeChild(a);
                                    liliumcms.notify({title : "Alias", message : "Removed alias successfully", type : "success"})
                                } else {
                                    liliumcms.notify({title : "Alias", message : "Missing rights", type : "danger"});
                                }
                            });

                            this.parentElement.removeChild(this);
                        });
                    })(a);

                    document.getElementById("moreinfo-alias").appendChild(rem);

                    if (i != resp.aliases.length - 1) {
                        var sep = document.createElement('span');
                        sep.textContent = ", ";
                        document.getElementById("moreinfo-alias").appendChild(sep);
                    }
                }
            } else {
                document.getElementById("moreinfo-alias").textContent = "This article has only one URL";
            }

            document.getElementById('moreinfo-author').textContent = resp["author"];
            document.getElementById('moreinfo-url').innerHTML = "";
            document.getElementById('article-slug-edit-value').value = resp.name || "";
            if (!resp.url || resp.url.indexOf('//') == -1) {
                document.getElementById('moreinfo-url').textContent = resp.url;
            } else {
                var a = document.createElement('a');
                a.href = resp.url;
                a.textContent = resp.url;
                a.setAttribute('target', '_blank');

                document.getElementById('moreinfo-url').appendChild(a);
            }

            var buttons = document.querySelectorAll('.article-button-wrapper');
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].style.display = "none";
            }

            document.getElementById('btn-dismiss-and-save').style.display = "";
            document.querySelector('.btn-rebuild').style.display = "none";
            if (resp.status == "published") {
                document.querySelector('.article-delete-button-wrapper').style.display = "";
                document.querySelector('.btn-rebuild').style.display = "";
                document.getElementById('btn-dismiss-and-save').style.display = "none";
            } else if (resp.status == "autosaved") {
                document.querySelector('.article-destroyautosave-button-wrapper').style.display = "";
            } else {
                document.querySelector('.article-destroyarticle-button-wrapper').style.display = "";
            }

            document.querySelector('.article-history-button-wrapper').style.display = "";
        });
    };

    var loadArticleHistory = function() {
        liliumcms.pageloader.load(window.location.urlBase + "admin/history/article/" + contentid);
    };

    var selectTopic = function(tt) {
        currentTopic = tt;

        d.id('topic-selection-name').text(tt.displayname);
        d.id('topic-selection-slug').text("/" + tt.completeSlug);
    };

    var addTopicToBreadcrumb = function(tt) {
        var crumb = d.make({ class : "topic-crumb", text : tt.displayname });
        crumb.bind('click', function() {
            
        });

        d.id('topic-category-strip').born(crumb);

        setTimeout(function() {
            crumb.cadd('shown');
        }, 50);
    };

    var fillTopicSelParent = function(parent) {
        d.id('topic-selection-done').crm('shown');

        var wrap = d.id('topic-selection-wrapper');
        wrap.empty();

        var tt = liliumcms.livevars.livevars()["topics.simple"];
        var found = false;
        for (var i = 0; i < tt.length; i++) if (tt[i].parent == parent) {
            var twrap = d.make({
                node : "div",
                class : "topic-strip",
                text : tt[i].displayname
            });

            (function(tt, i) {
                twrap.bind('click', function() {
                    fillTopicSelParent(tt[i]._id);
                    addTopicToBreadcrumb(tt[i]);
                    selectTopic(tt[i]);
                });
            })(tt, i);
            wrap.born(twrap);

            found = true;
        }

        if (!found) {
            d.id('topic-selection-done').cadd('shown');
            d.id('topic-category-strip').crm('shown');
        }
    };

    var fillTopicSelCat = function(cat) {
        var wrap = d.id('topic-selection-wrapper');
        wrap.empty();

        var tt = liliumcms.livevars.livevars()["topics.simple"];
        for (var i = 0; i < tt.length; i++) if (tt[i].category == cat) {
            var twrap = d.make({
                node : "div",
                class : "topic-strip",
                text : tt[i].displayname
            });

            (function(tt, i) {
                twrap.bind('click', function() {
                    fillTopicSelParent(tt[i]._id);
                    addTopicToBreadcrumb(tt[i]);
                    selectTopic(tt[i]);
                });
            })(tt, i);
            wrap.born(twrap);
        }
    };

    var bindPackagingPhase = function() {
        d.id('dismiss-pp-modal').bind('click', function() {
            document.body.classList.remove('block-scroll');
            liliumcms.modals.get('article-packaging').dismiss();
        });

        var catbuttons = document.querySelectorAll('.topic-category');
        for (var i = 0; i < catbuttons.length; i++) {
            (function(btn) {
                btn.addEventListener('click', function() {
                    btn.classList.add("pop");
                    d.id('topic-slide-1').cadd('dismissed');
                    d.id('topic-slide-2').get().style.display = "block";

                    var strip = d.id('topic-category-strip')
                    strip.empty();
    
                    strip.born(d.make({ node : "i", class : "fa " + btn.dataset.icon }));
                    strip.born(d.make({ node : "span", text : btn.dataset.text }));
                    strip.get().style.backgroundColor = btn.dataset.color;

                    var stripx = d.make({ node : "i", class : "fa fa-times strip-close" });
                    stripx.bind('click', function() {
                        resetTopics();
                    });

                    strip.born(stripx);

                    setTimeout(function() {
                        d.id('topic-slide-1').get().style.display = "none";

                        setTimeout(function() {
                            d.id('topic-category-strip').cadd('shown');
                            fillTopicSelCat(btn.dataset.category);
                        }, 20);
                    }, 500)
                });
            })(catbuttons[i]);
        }
    };

    var resetTopics = function() {
        currentTopic = undefined;
        d.id('topic-category-strip').crm('shown');
        d.id('topic-selection-done').crm('shown');

        var wrap = d.id('topic-selection-wrapper');
        wrap.empty();

        setTimeout(function() {
            document.getElementById('topic-slide-2').style.display = "";
            d.id('topic-slide-1').get().style.display = "";
            
            var poped = document.querySelector('.topic-category.pop');
            if (poped) {
                poped.classList.remove('pop');
            }

            setTimeout(function() {
                d.id('topic-slide-1').crm('dismissed');
            }, 50);
        }, 200);
    };

    var autoSave = function() {
        return;
            var currentSave = $('form').serialize();

            // Save only if content has changed
            if (lastSave != currentSave && $('.article_base_title').val().trim() != "" && $('textarea[name="content"]').val() != "") {
                var tempSave = currentSave + '&_id=' + _id + '&contentid=' + contentid;

                localSave();
                tempsave.title = contenttitle;
                tempsave.subtitle = contentsubtitle;
                tempsave.content = contentpages;

                $.post('{=config.default.server.url}/admin/article/autosave', tempSave, function(data) {
                    lastSave = CKEDITOR.instances.contenteditor.getData();

                    if (data.success && data._id) {
                        _id = data._id;
                    }

                    if ($('.cke_bottom .status').size() == 0) {
                        $('.cke_bottom').append('<span class="status">Last saved : <time class="date timeago" datetime="' + new Date().toString() + '">' + new Date() + '</time></span>');
                    }

                    $(".cke_bottom time.timeago").timeago("update", new Date());

                });
            } else {
                console.log("Skipping auto-save");
            }
    };


    $(document).ready(function() {
        // Will be edit, new or an id
        // Check if we can get an id
        var autoSaveInterval = setInterval(function() {
            if (!isPublished) { autoSave(); }
        }, 60 * 1000);

        liliumcms.pageloader.bindUnload(function() {
            clearInterval(autoSaveInterval);
        });

        d.id('pagination-and-banners').bind('mouseleave', function() {
            movingBlock = false; 
            movingBlockElem && movingBlockElem.classList.remove('moving');
            movingBlockElem = undefined; 
        });
        d.id('pagination-and-banners').bind('mouseup', function() {
            movingBlock = false; 
            movingBlockElem && movingBlockElem.classList.remove('moving');
            movingBlockElem = undefined; 
        });

        var saveCurrentArticle = function(cb) {
            document.dispatchEvent(new CustomEvent("articleWillSave"));
            localSave();

            // Save and give notification
            var currentSave = liliumcms.lmldom.getFormData().post_create.values;
            var url;
            var tempsave = currentSave;

            url = '/save';
            tempsave._id = contentid;
            tempsave.autosaveid = _id;
            tempsave.title = contenttitle;
            tempsave.subtitle = contentsubtitle;
            tempsave.content = contentpages;
            tempsave.date = new Date(tempsave.date);

            delete tempsave.contenttitle;
            delete tempsave.contentsubtitle;
            delete tempsave.contenteditor;

            liliumcms.lmldom.sendForm(tempsave, '{=config.default.server.url}/admin/article' + url, function(data) {
                lastSave = contentpages;

                if (data.success && data.redirect) {
                    liliumcms.pageloader.load(data.redirect);
                }

                if (data.success && data._id) {
                    contentid = data._id;
                }

                if ($('.cke_bottom .status').size() == 0) {
                    $('.cke_bottom').append('<span class="status">Last saved : <time class="date timeago" datetime="' + new Date().toString() + '">' + new Date() + '</time></span>');
                }

                liliumcms.notify({
                    title: 'Article was saved',
                    message: 'The latest modifications were successfully saved',
                    type: 'success'
                });

                updateBottomSection();
                cb && cb();
                $(".cke_bottom time.timeago").timeago("update", new Date());
            });
        }

        // Save Draft
        d.q('form button[name=save]').bind('click', function(e) {
            saveCurrentArticle();

            return false;
        });

        d.q('.btn-preview').bind('click', function(e) {
            // Open in new tab
            var btn = this;
            var textinside = btn.innerHTML;
            btn.innerHTML = "loading...";
            btn.disabled = true;

            document.dispatchEvent(new CustomEvent("articleWillPreview"));

            liliumcms.previewer.cast(document.querySelector("input[name=title]").value);
            var formdat = liliumcms.lmldom.getFormData().post_create.values; 
            formdat.id = contentid;
            formdat.topic = currentTopic._id;
            formdat.media = d.id('mediapicker').value;
            buildContentFromPackage();

            formdat.content = contentpages;
            formdat.title = contenttitle;
            formdat.subtitle = contentsubtitle;

            liliumcms.lmldom.post(formdat, '{=config.default.server.url}/admin/article/preview', function(html) {
                liliumcms.previewer.setContent(html);
                btn.disabled = false;
                btn.innerHTML = textinside;
            });
        });

        document.querySelector('.btn-rebuild').addEventListener('click', function() {
            rebuildPublishedArticle();
        });
    
        var rebuildPublishedArticle = function() {
            saveCurrentArticle(function() {
                liliumcms.modals.get("dlg-modal-publishing-loading").cast()
                liliumcms.lmldom.post({}, '{=config.default.server.url}/admin/article/rebuild/' + contentid, function(resp, b, c) {
                    liliumcms.modals.get("dlg-modal-publishing-loading").dismiss();
                    liliumcms.notify({title : "Article updated", type : "success", "content" : "The article was successfully updated and published on the website." });
                });
            });
        };

        var addToWhiteList = function(txt, lang) {
            liliumcms.lmldom.post({ word : txt, lang : lang }, '{=config.default.server.url}/admin/article/addwordtodico', function() {
                liliumcms.notify({title : "Word added to whitelist", type : "success", "content" : "The word '" + txt + "' was added to the whitelist." });
            });
        }

        var fillPackaging = function(serverdata) {
            // Corrections
            var changes = [];

            var plist = d.id('pr-parag-list');
            
            for (var s = 0; s < serverdata.length; s++) {
                var sdata = serverdata[s];
                var ps = sdata.paragraphs;

                for (var i = 0; i < ps.length; i++) {
                    if (sdata.corrections[i].length) {
                        var p = d.make({ class : "pr-parag" });

                        var pcontent = d.make({
                            class : "pr-editable",
                            html : ps[i]
                        });
                        pcontent.get().contentEditable = true;

                        var clist = d.make({ node : "ul", class : "pr-suggestions" });
                        for (var j = 0; j < sdata.corrections[i].length; j++) {
                            var c = sdata.corrections[i][j];
                            var li = d.make({ node : "li" });

                            li.born(d.make({node : "i", class : "fa fa-exclamation-circle"}));
                            li.born(d.make({node : "span", text : c.reason.split(';')[0]}));

                            if (c.suggestions) for (var k = 0; k < c.suggestions.length; k++) {
                                var singlesug = d.make({ node : "b", text : "Change to '" + c.suggestions[k] + "'", parent : li });

                                (function(singlesug, sug, reason, li, pcontent) {
                                    singlesug.bind('click', function() {
                                        pcontent.get().innerHTML = pcontent.get().innerHTML.replace(reason.split('`')[1], sug);
                                        li.get().remove();
                                    });
                                })(singlesug, c.suggestions[k], c.reason, li, pcontent)
                            }

                            var singlesug = d.make({ node : "b", text : "Add '" + c.reason.split('`')[1] + "' to whitelist", parent : li });
                            (function(addbtn, txt, li) {
                                addbtn.style('color', '#c7a4e0').bind('click', function() {
                                    addToWhiteList(txt, sdata.language);
                                    li.get().remove();
                                });
                            })(singlesug, c.reason.split('`')[1], li);

                            clist.born(li);
                        }

                        var markAsFixedWrap = d.make({ node : "div", class : "pr-mark-valid-wrap" });
                        var mFixed = d.make({ node : 'b', text : "Mark paragraph as verified", parent : markAsFixedWrap });

                        plist.born(p);

                        p.born(d.make({ node : "h4", text : "Suggested change for paragraph #" + (i+1) + " on page #" + (s+1) }));
                        p.born(clist);
                        p.born(pcontent);
                        p.born(markAsFixedWrap);

                        (function(i, mFixed, pcontent, p) {
                            mFixed.bind('click', function() {
                                changes[i] = pcontent;
                                p.get().remove();

                                if (plist.get().querySelectorAll(".pr-parag").length == 0) {
                                    plist.empty();
                                }

                                var box = document.getElementById('box-article-p-' + i);
                                if (box) {
                                    box.dataset.markup = '<p id="article-p-'+i+'">' + pcontent.html + '</p>';
                                }
                            });
                        })(i, mFixed, pcontent, p);
                    }
                }
            }

            // Topic
            var ts = d.id('topic-selection');
        };      

        var switchToPage = function(index) {
            var shown = document.querySelector('.page-wrapper.shown');
            shown.classList.remove('shown');

            var newPage = document.getElementById("page-wrapper-" + index);
            newPage.classList.add('shown');

            if (movingBlock && movingBlockElem) {
                newPage.insertBefore(movingBlockElem, newPage.firstElementChild);
            }

            var selected = document.querySelector('#pages-selector div.selected');
            selected.classList.remove('selected');

            document.getElementById('page-selector-' + index).classList.add('selected');
        };

        var createPageSelector = function(index) {
            var sel = d.make({ text : index ? "Page " + (index + 1) : "Landing", id : "page-selector-" + index });
            sel.bind('click', function() {
                switchToPage(index);
            });
            sel.bind('mouseenter', function() {
                if (movingBlock && movingBlockElem) {
                    switchToPage(index);
                }
            });

            if (index === 0) { sel.cadd('selected'); }

            d.id('pages-selector').born(sel);
        }

        var createPageTag = function(index) {
            var div = document.createElement('div');
            div.className = "page-wrapper";
            div.id = "page-wrapper-" + index;

            return div;
        }

        var movingBlock = false;
        var movingBlockElem;
        var createPageTabs = function(content) {
            var selectors = d.id('pages-selector').empty();
            var pages = d.id('pages-wrapper').empty();

            for (var pindex = 0; pindex < content.length; pindex++) {
                var ph = document.createElement('div');
                ph.innerHTML = content[pindex];

                var tags = ph.children;

                page = createPageTag(pindex);
                pages.get().appendChild(page);
                createPageSelector(pindex);

                !pindex && page.classList.add("shown");

                var didsplit = false;
                for (var i = 0; i < tags.length; i++) {
                    var tag = tags[i];

                    var isImage = !!tag.querySelector('img');
                    var markup = tag.outerHTML;
                    var box = undefined;

                    switch (tag.nodeName) {
                        case "H3": case "H4": case "H5": case "H6":
                            box = ( d.make({ class : "page-block page-head-block", text : tag.textContent.substring(0, 50) + "..." }).get() );
                            break;

                        case "AD":
                            box = ( d.make({ class : "page-block page-ad-block", text : "This can be moved around" }).get() );
                            break;

                        case "LML-RELATED":
                            box = ( d.make({ class : "page-block page-related-block", text : "This can be moved around" }).get() );
                            break;

                        case "HR":
                            box = ( d.make({ class : "page-block page-hr-block" }).get() );
                            break;

                        case "UL":
                            box = ( d.make({ class : "page-block page-list-block", text : tag.children.length + " list elements" }).get() );
                            break;

                        case 'BLOCKQUOTE':
                            if (tag.classList.contains('instagram-media')) {
                                box = ( d.make({ class : "page-block page-instaembed-block", text : "Using script embed" }).get() );
                            } else {
                                box = ( d.make({ class : "page-block page-quote-block", text : tag.textContent.substring(0, 50) + "..." }).get() );
                            }
                            break;

                        case 'SCRIPT':
                            box = ( d.make({ class : "page-block page-script-block", text : "Plain Javascript block" }).get() );
                            if (tag.src && tag.src.indexOf('instagram') != -1) {
                                box.textContent += ", needed for Instagram embed"
                                box.classList.add('page-instagram-script-block');
                            }
                            break;

                        case "P": 
                            box = isImage ? d.make({ 
                                class : "page-block page-img-block", 
                                text : tag.querySelector('a') ? tag.querySelector('a').textContent : tag.querySelector('img').src
                            }).get() : d.make({ 
                                class : "page-block page-parag-block", 
                                text : tag.textContent.substring(0, 50) + "..." 
                            }).get();
                            break;

                        case "LML-PAGE":
                            shouldsplit = true;
                            break;

                        default:
                            box = d.make({ class : "page-block page-unknown-block", text : tag.textContent.substring(0, 50) + "..." }).get();
                    }


                    if (box) {
                        page.appendChild(box);
                        box.dataset.index = i;
                        box.dataset.pageindex = pindex;
                        box.dataset.markup = markup;

                        if (tag.id) {
                            box.id = "box-" + tag.id;
                        }

                        (function(box) {
                            box.addEventListener('mousedown', function() {
                                movingBlock = true;
                                movingBlockElem = box;
                                box.classList.add('moving');
                            });

                            box.addEventListener('mouseenter', function() {
                                if (movingBlock && box != movingBlockElem) {
                                    movingBlockElem.parentElement.insertBefore(movingBlockElem, box);
                                }
                            });
                        })(box);
                    }
                        
                }
            }
        };

        var showPackaging = function() {
            liliumcms.modals.get('dlg-modal-packaging-loading').cast();
            d.id('pr-parag-list').empty();
            document.body.classList.add('block-scroll');

            setTimeout(function() {
                liliumcms.lmldom.post(
                    {}, 
                    '{=config.default.server.url}/admin/article/package/' + liliumcms.pageloader.lastLevel, 
                function(pkg) {
                    fillPackaging(pkg.report);
                    createPageTabs(pkg.content);
                    updateFacebookPreview(pkg.article);

                    liliumcms.modals.get('dlg-modal-packaging-loading').dismiss();

                    setTimeout(function() {
                        liliumcms.modals.get("article-packaging").cast();
                    }, 300);
                });
            }, 300);
        };

        $('form button[name=publish]').on('click', function(e) {
            saveCurrentArticle(function() {
                showPackaging();
            });

            return false;
        });

        window["article-packaging_accept"] = function(modal) {
            // Package current paragraph order + content in dataset
            publishCurrentArticle();
            document.body.classList.remove('block-scroll');
        };

        $('.btn-send-for-review').bind('click', function() {
            $('#confirm-send-for-review').modal('show');
            document.body.classList.remove('block-scroll');
        });

        var buildContentFromPackage = function() {
            var content = [];
            var pages = document.querySelectorAll('.page-wrapper');
            
            for (var pindex = 0; pindex < pages.length; pindex++) {
                var blocks = pages[pindex].querySelectorAll('.page-block');
                var markup = "";
                for (var i = 0; i < blocks.length; i++) {
                    markup += (blocks[i].dataset.markup)
                }

                content.push(markup + '<!-- '+ Date.now() +' -->');
            }

            contentpages = content;
            return content;
        }

        var curConfirmTimeout;
        var publishCurrentArticle = function(e, justsave) {
            var valid = true || liliumcms.formvalidator.validate($('form#post_create'));
            var form = liliumcms.lmldom.getFormData().post_create;
            var tempForm = form;

            tempForm.values.id = contentid;
            tempForm.values.autosaveid = _id;

            if (valid) {
                document.body.classList.remove('block-scroll');
                $('.alert-wrapper').remove();

                document.dispatchEvent(new CustomEvent("articleWillPublish"));
    
                if (articleEdit.urlWillChangeWarningShown) {
                    tempForm.values._keepURL = articleEdit.keepURL;
                } else if (isPublished) {
                    tempForm.values._keepURL = true; 
                }

                if (currentSlug) {
                    tempForm.values.currentSlug = currentSlug;
                }

                tempForm.values.topic = currentTopic && currentTopic._id;
                tempForm.values.media = document.querySelector('[name="media"]').value;

                if (!tempForm.values.topic) {
                    return liliumcms.notify({title : "Watch out!", message : "You forgot to assign a topic.", type : "warn"});
                }

                if (!tempForm.values.media) {
                    return liliumcms.notify({title : "Watch out!", message : "You forgot to assign a featured image.", type : "warn"});
                }

                buildContentFromPackage();

                tempForm.values.content = contentpages;
                tempForm.values.title = contenttitle;
                tempForm.values.subtitle = contentsubtitle;
                delete tempForm.values.contenttitle;
                delete tempForm.values.contentsubtitle;
                delete tempForm.values.contentpages;

                tempForm.values.facebooktitle = document.getElementById("facebook-package-title").textContent;
                tempForm.values.facebooksubtitle = document.getElementById('facebook-package-subtitle').textContent;
    
                liliumcms.modals.get("article-packaging").dismiss();

                var contentMarkup = contentpages[contentPageIndex];
                if (justsave) {
                    tempForm.values._id = contentid;
                    tempForm.values.id = undefined;
                    liliumcms.modals.get('dlg-modal-publishing-loading').dismiss();
                    liliumcms.lmldom.sendForm(tempForm.values, '{=config.default.server.url}/admin/article/save', function(data) {
                        liliumcms.notify( {type : "success", title : "Saved", message : "The packaged article was successfully saved and is ready to be published."});
                        updateBottomSection();
                        CKEDITOR.instances.contenteditor.setData(contentMarkup);
                    });
                } else {
                    liliumcms.modals.get('dlg-modal-publishing-loading').cast();
                    liliumcms.lmldom.sendForm(tempForm.values, '{=config.default.server.url}/admin/article/edit', function(data) {
                        liliumcms.modals.get('dlg-modal-publishing-loading').dismiss();
                        if (data.success) {
                            CKEDITOR.instances.contenteditor.setData(contentMarkup);
                            lastSave = CKEDITOR.instances.contenteditor.getData();
                            
                            if (data.redirect) {
                                liliumcms.pageloader.load(data.redirect);
                            }

                            if (data.newlyPublished) {
                                liliumcms.livevars.getSingleLivevar('content.publishreport.' + contentid, {}, function(resp) {
                                    if (resp.response.code == 200) {
                                        log('Content', 'Received publication report for article with id ' + contentid);
                                        var report = resp.livevars['content.publishreport.' + contentid];
                                        buildReport(report).show();
                                        
                                    } else {
                                        log('Content', 'Received empty publication report for article with id ' + contentid);
                                    }
                                });
                            }

                            updateBottomSection();
                        }
                    });
                }
            } else {
                liliumcms.notify({title : "Could not publish", message : "Some required fields are missing."});
            } 
        };

        $('#btn-dismiss-and-save').on('click', function(e) {
            publishCurrentArticle(e, true);
            enablePublishButton();
        });

        $('#confirm-unpublish button.btn-danger').on('click', function() {
            unpublishArticle();
        });

        $('#confirm-destroy button.btn-danger').on('click', function() {
            destroyArticle();
        });

        $('#button-send-review').bind('click', sendForReview);
        $('.btn-refuse-review').bind('click', refuseReview);
    });

    window["article-slug-edit_accept"] = function() {
        var newSlug = document.getElementById('article-slug-edit-value').value;
        liliumcms.lmldom.sendForm({slug : newSlug}, '{=config.default.server.url}/admin/article/editslug/' + contentid, function(resp) {
            if (resp.success) {
                liliumcms.notify({type : "success", message : "Slug updated"});
                liliumcms.modals.get("article-slug-edit").dismiss();
                updateBottomSection();
            } else {
                liliumcms.notify({type : "danger", message : resp.error});
            }
        });
    }

    var imgtag = document.getElementById('featured-image-tag');
    liliumcms.imagepicker.bind(imgtag, function(payload) {
        if (payload && payload.sizes) {
            imgtag.src = payload.sizes["{=?theme.info.featuredimage.sizename}" || "featured"].url;
            document.getElementById("facebook-package-image").src = imgtag.src;
            document.getElementById('mediapicker').value = payload._id;
        }
    }, {withcredit : true});

    imgtag.style.width = 0{=?theme.info.featuredimage.size.0} || 640;
    imgtag.style.height = 0{=?theme.info.featuredimage.size.1} || 480;
</script>

<div id="confirm-publish" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Publish</h4>
            </div>
            <div class="modal-body">
                <p>Publishing an article makes it visible to everyone. Ready?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-primary">Yes, go live!</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="confirm-unpublish" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Unpublish</h4>
            </div>
            <div class="modal-body">
                <p>Unpublishing does not delete the article, but removes it from the website.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-danger">Unpublish</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="confirm-destroy" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Destroy article</h4>
            </div>
            <div class="modal-body">
                <p>Destroying an article removes it from the list. This process is irreversible.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn-danger">Destroy</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="urlchanged-modal" class="modal fade announcement" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Title was changed after publishing</h4>
            </div>
            <div class="modal-body">
                <p>The URL will be changed. Would you like to keep the same URL, or update it with the new title?</p>
                <p>If you update the URL, the old one will still work but the new page will lose its Facebook shares.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-primary" id="button-update-url">Update it</button>
                <button type="button" class="" id="button-keep-url">Keep it</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div id="publishreport" class="hidden">
    <div id="prep-wrapper">
        <img src="" id="prep-image" />
        <div class="prep-top">
            <span id="prep-bigtitle">Article published</span>
            <span id="prep-title"></span>
            <span id="prep-subtitle"></span>
        </div>
        <div class="prep-stats">
            <div class="prep-stat"><i class="fa fa-money"></i> <span id="prep-adsinserted"></span> ads inserted</div>
            <div class="prep-stat"><i class="fa fa-handshake-o"></i> Article is <span id="prep-sponsored"></span>sponsored</div>
            <div class="prep-stat"><i class="fa fa-columns"></i> <span id="prep-pagecount"></span></div>
            <div class="prep-stat"><i class="fa fa-paragraph"></i> <span id="prep-paragcount"></span> paragraph blocks</div>
            <div class="prep-stat"><i class="fa fa-picture-o"></i> <span id="prep-imagescount"></span> images</div>
            <div class="prep-stat"><i class="fa fa-globe"></i> Full URL : <a id="prep-fullurl" target="_blank"></a></div>
        </div>
        <div class="prep-author">
            <img src="" id="prep-authorimage" />
            <div class="prep-authorsection">
                <div class="prep-authortitle">Written by <span id="prep-authorname"></span></div>
                <div class="prep-authorfield"><i class="fa fa-paper-plane-o"></i> <span id="prep-authortotal"></span> articles</div>
                <div class="prep-authorfield"><i class="fa fa-calendar-o"></i> <span id="prep-authortoday"></span> today</div>
            </div>
        </div>
        <div class="prep-footer">
            <button class="prep-dismiss btn" onclick="dismissReport();"><i class="fa fa-check"></i> Dismiss</button>
        </div>
    </div>
</div>

