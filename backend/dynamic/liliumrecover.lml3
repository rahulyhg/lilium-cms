const settings = { };

// Markup
const LRMarkup = `<div id="lr-wrapper">
    <h1 id="pagetitle">Access checkpoint - Level <b id="accesscheckpoint-level">1</b></h1>

    <p style="display: none;" id="presentation-p">
        So you can't login. 
        It happens. 
        The good news is it most likely happened because you've chosen a password that is not used anywhere else. 
        Let's do our best together and get you a new password. 
    </p>

    <form autocomplete="false" onsubmit="return false;">
        <input style="display:none" type="text" name="fakeusernameremembered"/>
        <input style="display:none" type="password" name="fakepasswordremembered"/>
        <input type="text" id="txtusername" placeholder="Enter your username then press Return / Enter" class="hidden" />
        <input type="text" id="txtcode" placeholder="Provide the Lilium code then press Return / Enter" class="hidden" style="display: none;" />
        <input type="password" id="txtpassword" placeholder="Input a new password then press Return / Enter" class="hidden" style="display: none;" />
    </form>
</div>`;

// Script
const LRScript = `<script>
    var displayform = function() {
        document.getElementById('txtusername').classList.remove('hidden');
    };

    var displayLevel2 = function() {
        document.getElementById("accesscheckpoint-level").textContent = "2";
        document.getElementById('txtusername').style.display = "none";
        document.getElementById('txtcode').style.display = "";

        var pel = document.getElementById("presentation-p");
        var secondparag = "Check your phone for an SMS from Lilium!";
        for (var i = 0; i < secondparag.length; i++) {
            var span = document.createElement('span');
            span.textContent = secondparag[i];
            span.style.display = "none";
            pel.appendChild(span);

            (function(span, i) {
                setTimeout(function() {
                    span.style.display = "";
                }, i * 10);
            })(span, i);
        }

        setTimeout(function() {
            document.getElementById('txtcode').classList.remove("hidden");
        }, secondparag.length * 10);
    }

    var displayLevel3 = function() {
        document.getElementById("accesscheckpoint-level").textContent = "3";
        document.getElementById('txtcode').style.display = "none";
        document.getElementById('txtpassword').style.display = "";

        var pel = document.getElementById("presentation-p");
        var secondparag = "Please choose a new password. In an ideal world your new password should not be used anywhere else, should contain at least 6 characters including a special one, and should be weird enough so that no one could guess it.";
        for (var i = 0; i < secondparag.length; i++) {
            var span = document.createElement('span');
            span.textContent = secondparag[i];
            span.style.display = "none";
            pel.appendChild(span);

            (function(span, i) {
                setTimeout(function() {
                    span.style.display = "";
                }, i * 10);
            })(span, i);
        }

        setTimeout(function() {
            document.getElementById('txtpassword').classList.remove("hidden");
        }, secondparag.length * 10);
    }

    var displayError = function() {
        var pel = document.getElementById("presentation-p");
        var secondparag = "Hmm... This does not seem quite right. Try again?";
        for (var i = 0; i < secondparag.length; i++) {
            var span = document.createElement('span');
            span.textContent = secondparag[i];
            span.style.display = "none";
            pel.appendChild(span);

            (function(span, i) {
                setTimeout(function() {
                    span.style.display = "";
                }, i * 10);
            })(span, i);
        }

    }

    var smssent = function() {
        var parag = document.getElementById('presentation-p');
        var spanint = setInterval(function() {
            if (parag.lastElementChild) {
                parag.lastElementChild.remove();
            } else {
                clearInterval(spanint);
                displayLevel2();
            }
        }, 2);
    };

    var codeSent = function() {
        var resp = this.responseText;
        var parag = document.getElementById('presentation-p');
        var spanint = setInterval(function() {
            if (parag.lastElementChild) {
                parag.lastElementChild.remove();
            } else {
                clearInterval(spanint);
                resp = JSON.parse(resp);
                if (!resp.response) {
                    displayLevel3();
                } else {
                    displayError();
                }
           }
        }, 2);
    };

    var finishUp = function() {
        document.getElementById("accesscheckpoint-level").textContent = "4";
        document.getElementById('txtpassword').style.display = "none";

        var pel = document.getElementById("presentation-p");
        var secondparag = "Alright! Your password was updated. Let me redirect you to the login screen in a couple seconds.";
        for (var i = 0; i < secondparag.length; i++) {
            var span = document.createElement('span');
            span.textContent = secondparag[i];
            span.style.display = "none";
            pel.appendChild(span);

            (function(span, i) {
                setTimeout(function() {
                    span.style.display = "";
                }, i * 10);
            })(span, i);
        }

        setTimeout(function() {
            document.location = "/login";
        }, secondparag.length * 10 + 3);
    }

    var passwordSent = function() {
        var parag = document.getElementById('presentation-p');
        var spanint = setInterval(function() {
            if (parag.lastElementChild) {
                parag.lastElementChild.remove();
            } else {
                clearInterval(spanint);
                finishUp();
            }
        }, 2);
    };

    var submitForm = function() {
        var username = document.getElementById('txtusername').value;
        window.globusername = username;

        var req = new XMLHttpRequest();
        req.addEventListener("load", smssent);
        req.open('GET', '/accesscheckpoint/' + username);
        req.send();
    };

    var submitCode = function() {
        var code = document.getElementById('txtcode').value;
        window.globcode = code;

        var req = new XMLHttpRequest();
        req.addEventListener("load", codeSent);
        req.open('GET', '/accesscheckpoint/' + window.globusername);
        req.setRequestHeader("LML-CODE", code);
        req.send();
    }

    var commitPassword = function() {
        var password = document.getElementById('txtpassword').value;

        var req = new XMLHttpRequest();
        req.addEventListener("load", passwordSent);
        req.open('GET', '/accesscheckpoint/' + window.globusername);
        req.setRequestHeader("LML-CODE", window.globcode);
        req.setRequestHeader("LML-SECRET", password);
        req.send();
    }

    setTimeout(function() {
        var parag = document.getElementById('presentation-p');
        var text = parag.textContent;

        parag.textContent = "";
        parag.style.display = "block";

        for (var i = 0; i < text.length; i++) {
            var span = document.createElement('span');
            span.textContent = text[i];
            span.style.display = "none";
            parag.appendChild(span);

            (function(span, i) {
                setTimeout(function() {
                    span.style.display = "";
                }, i * 10);
            })(span, i);
        }

        var totalwait = text.length * 10;

        setTimeout(displayform, totalwait);
    }, 500);

    var usernamesent = false;
    document.getElementById('txtusername').addEventListener('keydown', function(ev) {
        if (!usernamesent && ev.keyCode == 13 && ev.target.value.trim()) {
            usernamesent = true;

            document.getElementById('txtusername').classList.add('hidden');
            submitForm();
        }
    });

    var codesent = false;
    document.getElementById('txtcode').addEventListener('keydown', function(ev) {
        if (!codesent && ev.keyCode == 13 && ev.target.value.trim()) {
            codesent = true;
            
            document.getElementById('txtcode').classList.add('hidden');
            submitCode();
        }
    });

    var passwordsent = false;
    document.getElementById('txtpassword').addEventListener('keydown', function(ev) {
        if (!passwordsent && ev.keyCode == 13 && ev.target.value.trim().length > 6) {
            passwordsent = true;
            
            ev.target.classList.add('hidden');
            commitPassword();
        }
    });

    var huerotate = 0;
    var titleel = document.getElementById("pagetitle");
    setInterval(function() {
        titleel.style.filter = "hue-rotate("+(++huerotate)+"deg)";
    }, 15);
</script>`;

// CSS
const LRStyle = `<style>

html, body {
    padding : 0;
    margin : 0;

    background-color: #333;
    color : #FFF;
    font-family: 'VT323', monospace;
}

h1 {
    font-weight: normal;
    padding: 20px 20px 0px;
    margin: 0px;
    border-bottom: 3px solid #F6F;
    font-size: 48px;
    background: #111;
    height: 45px;
    color : #F6F;
}

h1 b {
    font-size: 56px;
}

p {
    font-size: 30px;
    margin: 30px auto;
    width: 640px;
}

textarea, input, button { outline: none; }

input {
    display: block;
    margin: auto;
    width: 500px;
    padding: 4px 5px;
    font-size: 22px;
    font-family: 'VT323', monospace;
    background: transparent;
    border: none;
    border-bottom: 1px solid #AAA;

    color: #FFF;
}

#txtcode.hidden,
#txtusername.hidden {
    opacity : 0;
    -webkit-transform : translate3d(0, -20px, 0);
    -moz-transform : translate3d(0, -20px, 0);
    transform : translate3d(0, -20px, 0);
}

#txtcode,
#txtusername {
    transition: all 0.5s;
    -webkit-transform : translate3d(0, 0, 0);
    -moz-transform : translate3d(0, 0, 0);
    transform : translate3d(0, 0, 0);
}

</style>`;

// Logic
const compile = (o, context) => { o(`

<!DOCTYPE html>
<html>
    <head>
        <title>Lilium - Access checkpoint</title>
        <link href="https://fonts.googleapis.com/css?family=VT323" rel="stylesheet">

        ${LRStyle}
    </head>
    <body data-pagetype="lilium-special" data-endpoint="liliumrecover" data-generator="LML3">
        ${LRMarkup}
        ${LRScript}
    </body>
</html>

`); }

module.exports = { settings, compile };
