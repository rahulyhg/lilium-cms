{#config}
var LMLImageStudioSession = function(opt) {
    var defaults = {
        
    };
    
    this.options = {};

    var dkeys = Object.keys(defaults);
    var okeys = Object.keys(opt || {});

    for (var i = 0; i < dkeys.length; i++) {
        this.options[dkeys[i]] = defaults[dkeys[i]];
    }

    for (var i = 0; i < okeys.length; i++) {
        this.options[okeys[i]] = opt[okeys[i]];
    }
}

var LMLImageStudio = function(image) {
    var that = this;
    this.image = image;
    this.wrapper = document.getElementById("lml-imagestudio");
    this.session = new LMLImageStudioSession();

    this.setImage = function(image) {
        this.image = image;
    };

    this.loadContent = function() {
        document.getElementById("lmlis-preview-thumb").src = "{=config.default.server.url}/uploads/" + that.image.url;
        var sizes = Object.keys(that.image.sizes);
        var sizelist = document.getElementById("lmlis-sizes-list");
        
        sizelist.innerHTML = "";
        var listitem = document.createElement('li');
        listitem.dataset.size = "original";
        listitem.textContent = " Original (" + that.image.size.width + "x" + that.image.size.height + ")";
        listitem.classList.add("selected");
        // listitem.addEventListener('click'
        sizelist.appendChild(listitem);

        for (var i = 0; i < sizes.length; i++) {
            var listitem = document.createElement('li');
            listitem.textContent = sizes[i] + " (" + that.image.sizes[sizes[i]].width + "x" + that.image.sizes[sizes[i]].height + ")";
            listitem.dataset.size = sizes[i];

            sizelist.appendChild(listitem);
        }
    };

    this.cast = function() {
        console.log('Loading image studio');
        this.wrapper.classList.add('showing');
        setTimeout(function() {
            that.wrapper.classList.add('shown');
            console.log('Loaded image studio');
        }, 20);
    };

    this.loadContent();
};

