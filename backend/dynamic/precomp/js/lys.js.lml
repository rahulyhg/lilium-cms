{#config}
/*
    Layout : {
        indexes : [],
        actions : {
            indexes : callback
        }
    }
*/

var Lys = function() {
    this.commandHistory = new Array();
    this.commandsLib = new Object();
    this.commandsKeys = new Array();

    this.addLys = function(index, action, info) {
        if (typeof index == "object") {
            for (var i = 0; i < index.length; i++) {
                this.addLys(index[i], action, info);
            }
        } else {
            this.commandsKeys.push(index);
            this.commandsLib[index] = {
                callback : action,
                info : info.description || index,
                name : info.displayname || index
            };
        }
    };

    this.execute = function(cmd) {
        var levels = cmd.toLowerCase().split(' ');
        var base = levels[0];

        if (this.commandsLib[base].callback.apply(this, levels)) {
            this.dismissLys();
        }
    };

    this.castLys = function() {
        $('#lys-container').show();
        setTimeout(function() {
            $('#lys').addClass('shown').focus();
        }, 10);
    };

    this.dismissLys = function() { 
        $('#lys').removeClass('shown').blur();
        setTimeout(function() {
            $('#lys-container').hide();
            $('#lys').val('');
        }, 210);
    };

    this.bindKeys = function() {
        var that = this;

        Mousetrap.bind('shift+space', function(e) {
            that.castLys();
            return false;
        });

        var lysDOM = $('#lys');
        lysDOM.bind('keyup', function(ev) {
            if (ev.keyCode === 27) {
                that.dismissLys();
            } else if (ev.keyCode == 13) {
                var txt = lysDOM.val().trim();
                if (txt === "") {
                    lysDOM.val(lysDOM.attr("placeholder"));
                } else {
                    that.execute(lysDOM.val());
                }
            }
        });
    };

    var basicShowLys = function(commandName, pageName) {
        if (pageName === "my") {
            pageName = arguments[2];
        }

        var sameToPage = {
            "posts" : "article",
            "articles" : "article",
            "dashboard" : "dashboard",
            "sites" : "sites",
            "media" : "media/list",
            "entities" : "entities",
            "users" : "entities",
            "personas" : "persona/list",
            "themes" : "themes",
            "plugins" : "plugins",
            "settings" : "settings",
            "parameters" : "settings",
            "devtools" : "devtools",
            "dev" : "devtools", 
            "profile" : "me",
            "preferences" : "preferences",
            "settings" : "preferences",
            "lilium" : "preferences"
        };

        if (pageName === "site") {
            document.location.href = "{=config.default.server.url}";
            return true;
        } else if (!pageName || pageName == "" || !sameToPage[pageName]) {
            return false;
        }

        document.location.href = "{=config.default.server.url}/admin/" + sameToPage[pageName];
        return true;
    };

    var basicCreateLys = function(commandName, objName) {
        if (commandName === "publish") {
            document.location.href = "{=config.default.server.url}/admin/article/new";
            return true;
        }

        var objTypes = {
            "entity" : "entities/new",
            "user" : "entities/new",
            "post" : "article/new",
            "article": "article/new",
            "site" : "sites/launch",
            "script" : "devtools/lml",
            "persona" : "persona/new"
        };

        var jumpIndex = 2;
        while (objName === "new" || objName === "an" || objName === "a") {
            objName = arguments[jumpIndex];
            jumpIndex++;
        }

        if (!objName || objName == "" || !objTypes[objName]) {
            return false;
        }

        document.location.href = "{=config.default.server.url}/admin/" + objTypes[objName];
        return true;
    };

    var basicEditLys = function(commandName, keyword, detail) {
        levels = new Object();
        levels.my = {
            profile : "me",
            preferences : "preferences",
            lilium : "preferences",
            settings : "preferences",
            site : "settings"
        };

        if (!levels[keyword]) {
            detail = keyword;
            keyword = 'my';
        }
        
        if (url = levels[keyword][detail]) {
            document.location.href = "{=config.default.server.url}/admin/" + url;
            return true;
        }

        return false;
    };

    var basicEasterEgg = function(callname, subject) {
        if (callname === "thanks") {
            liliumcms.notify({type:"success", title:"You're welcome", message:"It's always a pleasure working with you :D"});
            return true;
        }

        if (subject === "me") {
            liliumcms.notify({type:"success", title:"Of course I love you!", message:"From the bottom of my binary heart :)"});
            return true;
        } else if (subject === "you" || subject === "lilium") {
            liliumcms.notify({type:"success", title:"Aww", message:"I love you too, buddy :)"});
            return true;
        }

        return false;
    };

    var basicPersonalAction = function(callname, action, subject) {
        if (action === "love") {
            return basicEasterEgg(action, subject);
        }

        return false;
    };

    var basicLogout = function(callname, levels) {
        document.location.href = "{=config.default.server.url}/logout";
        return true;
    }

    var init = function() {
        document.addEventListener('livevarsRendered', function(pkg) {
            document.dispatchEvent(new CustomEvent("lysWillRegister"));
            liliumcms.lys.addLys(["show", "display", "list", "visit", "see"], basicShowLys, {
                description : "Shows a specific section of the admin panel",
                displayname : "Show"
            });

            liliumcms.lys.addLys(["create", "new", "publish"], basicCreateLys, {
                description : "Creates a new Lilium object",
                displayname : "Create"
            });

            liliumcms.lys.addLys(["edit", "modify", "alter"], basicEditLys, {
                description : "Edit a lilium object",
                displayname : "Edit"
            });

            liliumcms.lys.addLys(['love', 'thanks'], basicEasterEgg, {
                description : "...",
                displayname : "Love"
            });

            liliumcms.lys.addLys('i', basicPersonalAction, {
                description : "Action by the current user",
                displayname : "The current user will..."
            });

            liliumcms.lys.addLys(["login", "logout"], basicLogout, {
                description : "Logs out the current user and displays the login page",
                displayname : "Logout"
            });

            liliumcms.lys.addLys(["search", "lookup", "find"], function(_____, terms, _____) {
                displayBackendSearch();
                if (terms && terms !== "") {
                    var query = Array.prototype.splice.call(arguments, 1).join(' ');
                    if (query.indexOf('for') === 0) {
                        query = query.substring(4);
                    }

                    $('.backendsearch-input').val(query);
                    besFormSubmit();

                    return true;
                }

                return false;
            }, {
                description : "Popup search overlay",
                displayname : "Search"
            });

            document.dispatchEvent(new CustomEvent("lysRegistered"));
        });
    };

    init();
};
