{#config}
window.addQuizToPost = function(caller, isEdit, cb) {
    $.get('{=config.default.server.url}/static/admin-quiz-form.html', function(data) {
        $(caller).parent().html(data);
        window.lmlquiz = new window.LMLQuiz().eraseOtherLeaves(caller).bind();

        cb && cb(window.lmlquiz);
    });
    
    if (!isEdit) {
        $.post("{=config.default.server.url}/admin/article/addfeature/" + contentid, {feature : "quiz", overwrite : false, props : {} }, function() {});
    }
};

window.editQuizToPost = function() {
    var curart = liliumcms.livevars.livevars()["content." + contentid];
    if (curart && curart[0] && curart[0].feature === "quiz") {
        window.addQuizToPost($('button[name="create-postleaf-quiz"]'), true, function(quizobj) {
            quizobj.tryToFill(curart[0]);
        });
    };
};

var _lmlSaveQuiz = function() {
    if (window.lmlquiz) {
        window.lmlquiz.saveQuiz();
    }
}

document.addEventListener('articleWillSave', _lmlSaveQuiz);
document.addEventListener('articleWillPublish', _lmlSaveQuiz);

window.LMLQuiz = function() {
    var that = this;
    var quizautosave = false;
    this.questions = {};
    this.personalities = {};
    var curart;

    var ce = function(tag, classes, attr, prt) {
        var elem = document.createElement(tag);
        if (classes) {
            for (var i = 0; i < classes.length; i++) {
                elem.classList.add(classes[i]);
            }
        }

        if (attr) {
            for (var at in attr) {
                if (at == "html") {
                    elem.innerHTML = attr[at];
                } else {
                    elem.setAttribute(at, attr[at]);
                }
            }
        }

        if (prt) {
            prt.appendChild(elem);
        }

        return elem;
    };

    this.createQuizObject = function() {
        var quiz = {
            personalities : [],
            questions : []
        };
        var allpersos = document.querySelectorAll(".quiz-personality-wrapper");
        var allquests = document.querySelectorAll(".quiz-question-wrapper");

        for (var i = 0; i < allpersos.length; i++) {
            var pers = allpersos[i];

            quiz.personalities.push({
                id : pers.id,
                name : pers.querySelector(".quiz-personality-name").value,
                details : pers.querySelector(".quiz-personality-details").value,
                photo : pers.querySelector(".quiz-personality-image").dataset.photoid,
                photourl : pers.querySelector(".quiz-personality-image").getAttribute('src'),
                photocred : pers.querySelector(".quiz-personality-image-cred").value,
                photocredlink : pers.querySelector(".quiz-personality-image-cred-link").value
            });
        }

        for (var i = 0; i < allquests.length; i++) {
            var quest = allquests[i];
            var allans = quest.querySelectorAll(".quiz-answer-wrapper");
            
            var answers = [];
            for (var j = 0; j < allans.length; j++) {
                var ans = allans[j];
                answers.push({
                    id : ans.id,
                    photo : ans.querySelector('.quiz-answer-photo').dataset.photoid,
                    photourl : ans.querySelector('.quiz-answer-photo').getAttribute('src'),
                    answer : ans.querySelector('.quiz-answer-answer').value,
                    personality : ans.querySelector('.quiz-answer-personality-select').value,
                    photocred : ans.querySelector('.quiz-answer-photo-cred').value,
                    photocredlink : ans.querySelector('.quiz-answer-photo-cred-link').value
                });
            } 

            quiz.questions.push({
                id : quest.id,
                answers : answers,
                interogation : quest.querySelector('.quiz-question-interogation').value,
                photo : quest.querySelector('.quiz-question-photo').dataset.photoid,
                photourl : quest.querySelector('.quiz-question-photo').getAttribute('src'),
                photocred : quest.querySelector('.quiz-question-photo-cred').value,
                photocredlink : quest.querySelector('.quiz-question-photo-cred-link').value
            });
        }

        return quiz;
    };

    this.saveQuiz = function() {
        var curart = liliumcms.livevars.livevars()["content." + contentid];

        if (curart && curart[0] && curart[0].feature === "quiz") {
            var quizjson = JSON.stringify(that.createQuizObject());
            $.post('{=config.default.server.url}/admin/quiz/save', {quizjson : quizjson, contentid : contentid}, function() {
                console.log("Quiz was saved.");
            });
        }
    };

    this.bindQuizAutoSave = function() {
        quizautosave = true;
    };

    this.eraseOtherLeaves = function(toIgnore) {
        $('.postleaf-wrapper > button').each(function(index, elem) {
            if (elem.name != toIgnore.name) {
                elem.parentElement.innerHTML = "";
            } else {
                elem.remove();
            }
        });
        return this;
    };  
 
    this.tryToFill = function(curart) {
        props = curart.featuredata;

        if (props) {
            var persos = props.personalities;
            var quests = props.questions;

            that.personalities = persos;
            that.questions = quests;

            for (var i = 0; i < persos.length; i++) {
                that.addPersonality(persos[i]);
            }

            for (var i = 0; i < quests.length; i++) {
                that.addQuestion(quests[i]);
            }
        }

        return this;
    };

    this.updatePersoSelect = function(persoid) {
        var perso = that.personalities[persoid];
        var options = document.querySelectorAll('.lmlquiz .quiz-answer-personality-select option[value="'+persoid+'"]');
        
        for (var i = 0; i < options.length; i++) {
            options[i].innerHTML = perso.name;
        }
    };

    this.removeFromPersoSelect = function(persoid) {
        var options = document.querySelectorAll('.lmlquiz .quiz-answer-personality-select option[value="'+persoid+'"]');
        
        for (var i = 0; i < options.length; i++) {
            options[i].remove();
        }
    };

    this.addPersoSelect = function(persoid) {
        var perso = that.personalities[persoid];
        var selects = document.querySelectorAll('.lmlquiz .quiz-question-list .quiz-answer-personality-select');
        
        for (var i = 0; i < selects.length; i++) {
            var sel = selects[i];
            var opt = document.createElement('option');
            opt.value = perso.id;
            opt.innerHTML = perso.name;

            sel.appendChild(opt);
        }
    };

    this.fillSelectWithPerso = function(select) {
        var opt = document.createElement('option');
        opt.value = "none";
        opt.innerHTML = " - No personality - ";
        select.appendChild(opt);

        for (var id in that.personalities) {
            var opt = document.createElement('option');
            opt.value = id;
            opt.innerHTML = that.personalities[id].name;

            select.appendChild(opt);
        }
    };

    this.addAnswer = function(answer, questid) {
        var genID = answer ? answer.id : ("ans-" + Math.random().toString(36).substring(2));
        
        var wrapper = ce('div', ["quiz-answer-wrapper"], {id:genID});

        var answerimg = ce('img', ["quiz-answer-photo"], answer && answer.photo ? {src:answer.photourl, "data-photoid" : answer.photo} : undefined, wrapper);
        liliumcms.imagepicker.bind(answerimg);

        var answername = ce('input', ["quiz-answer-answer"], {
            type : "text",
            placeholder : "Answer",
            value : answer ? answer.answer : ""
        }, wrapper);         

        var answerperso = ce('select', ["quiz-answer-personality-select"], {
            placeholder : "Personality",
            value : answer ? answer.personality : ""
        }, wrapper);
        that.fillSelectWithPerso(answerperso);

        var answerimgcred = ce('input', ["quiz-answer-photo-cred"], {
            type : "text",
            placeholder : "Image credit",
            value : answer ? answer.photocred : ""
        }, wrapper);

        var answerimgcredlink = ce('input', ["quiz-answer-photo-cred-link"], {
            type : "text",
            placeholder : "Image credit link",
            value : answer ? answer.photocredlink : ""
        }, wrapper);

        if (answer) {
            answerperso.value = answer.personality;
        }

        var answeractionwrap = ce('div', ["quiz-answer-action-wrapper"], undefined, wrapper);

        var btndeleteanswer = ce('button', ["quiz-answer-button-remove", "red"], {
            html : "Remove answer",
            type : "button"
        }, answeractionwrap);

        (function(genid) {
            btndeleteanswer.addEventListener('click', function() {
                document.getElementById(genid).remove();
            }); 
        })(genID)

        var inputboxes = wrapper.querySelectorAll('input, select');
        for (var i = 0; i < inputboxes.length; i++) {
            inputboxes[i].addEventListener('change', function() {
                window.lmlquiz.saveQuiz();
            });
        }

        answerimg.addEventListener("DOMAttrModified", function(event) {
            if (event.attrName == "src") {
                window.lmlquiz.saveQuiz();
            }
        });

        document.getElementById("answerwrapper-for-" + questid)
            .insertBefore(wrapper, document.getElementById(questid).querySelector('.quiz-question-button-add-answer'));
    };

    this.addQuestion = function(quest) {
        var genID = quest ? quest.id : ("quest-" + Math.random().toString(36).substring(2));

        var wrapper = ce('div', ["quiz-question-wrapper"], {id:genID});

        var questinterogation = ce('input', ["quiz-question-interogation"], {
            type : "text",
            placeholder : "Interogation",
            value : quest ? quest.interogation : ""
        }, wrapper);

        var photowrapper = ce('div', ["quiz-question-photo-wrapper"], {id:genID}, wrapper);
        var questimg = ce('img', ["quiz-question-photo"], quest && quest.photourl ? {src:quest.photourl, "data-photoid" : quest.photo} : undefined, photowrapper);
        liliumcms.imagepicker.bind(questimg);

        var questimgcred = ce('input', ["quiz-question-photo-cred"], {
            type : "text",
            placeholder : "Image credit",
            value : quest ? quest.photocred : ""
        }, photowrapper);

        var questimgcredlink = ce('input', ["quiz-question-photo-cred-link"], {
            type : "text",
            placeholder : "Image credit link",
            value : quest ? quest.photocredlink : ""
        }, photowrapper);

        var answerstitle = ce('h4', [], {
            html : "List of answers"
        }, wrapper);    

        var answerswrapper = ce('div', ["quiz-question-answers-wrapper"], {
            id : "answerwrapper-for-" + genID
        }, wrapper);

        var btnaddanswer = ce('button', ["quiz-question-button-add-answer"], {
            id : "add-answer-to-" + genID,
            html : "Add answer",    
            type : "button"
        }, answerswrapper);

        var actionwrapper = ce('div', ["quiz-question-action-wrapper"], undefined, wrapper);
        
        var btnremovequest = ce('button', ["quiz-question-button-remove", "red"], {
            html: "Remove question",
            type: "button"
        }, actionwrapper);

        (function(genid) {
            btnremovequest.addEventListener('click', function(e) {
                document.getElementById(genid).remove();
            });
        })(genID);

        (function(genid) {
            btnaddanswer.addEventListener('click', function(e) {
                that.addAnswer(undefined, genid);
                return false;
            });
        })(genID);

        document.querySelector('.lmlquiz .quiz-question-list').appendChild(wrapper);

        var inputboxes = wrapper.querySelectorAll('input, select');
        for (var i = 0; i < inputboxes.length; i++) {
            inputboxes[i].addEventListener('change', function() {
                window.lmlquiz.saveQuiz();
            });
        }

        questimg.addEventListener("DOMAttrModified", function(event) {
            if (event.attrName == "src") {
                window.lmlquiz.saveQuiz();
            }
        });



        if (quest) {
            for (var i = 0; i < quest.answers.length; i++) {
                that.addAnswer(quest.answers[i], quest.id);
            }
        }
    };

    this.addPersonality = function(pers) {
        var genID = pers ? pers.id : ("pers-" + Math.random().toString(36).substring(2));

        var wrapper = ce("div", ["quiz-personality-wrapper"], {id:genID});        
        var photowrap = ce("div", ["quiz-personality-photo-wrapper"], undefined, wrapper);
        var detailswrap = ce("div", ["quiz-personality-details-wrapper"], undefined, wrapper);

        var persoimg = ce('img', ["quiz-personality-image"], pers && pers.photourl ? {src:pers.photourl, "data-photoid":pers.photo} : undefined, photowrap);
        var persoimgcred = ce('input', ["quiz-personality-image-cred"], {
            type:"text", 
            placeholder:"Photo Credit", 
            value : pers ? pers.photocred : ""
        }, photowrap);

        var persoimgcredlink = ce('input', ["quiz-personality-image-cred-link"], {
            type:"text", 
            placeholder:"Credit Link", 
            value : pers ? pers.photocredlink : ""
        }, photowrap);

        var personame = ce('input', ["quiz-personality-name"], {
            type:"text", 
            placeholder:"Personality name", 
            value: pers ? pers.name : ""
        }, detailswrap);

        var persodetails = ce('textarea', ["quiz-personality-details"], {
            type:"text", 
            placeholder:"Personality details",
            html : pers ? pers.details : ""
        }, detailswrap);

        var btnwrapper = ce('div', ["quiz-personality-actions"], undefined, wrapper);
        var removebtn = ce('button', ["quiz-personality-remove", "red"], {html:"Remove personality", type:"button"}, btnwrapper);

        (function(genid) {
            removebtn.addEventListener('click', function(e) {
                document.getElementById(genid).remove();
                that.removeFromPersoSelect(genid);
                delete that.personalities[genid];
            });
        })(genID);

        liliumcms.imagepicker.bind(persoimg);

        var tbs = wrapper.querySelectorAll('input[type="text"]');
        for (var i = 0; i < tbs.length; i++) {
            tbs[i].addEventListener('keypress', function(e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    return false;
                }
            });
        }

        wrapper.querySelector('.quiz-personality-name').addEventListener('change', function() {
            that.personalities[wrapper.id].name = this.value;
            that.updatePersoSelect(wrapper.id);
        });
        
        that.personalities[genID] = {
            id : genID,
            name : pers ? pers.name : ""
        };

        var inputboxes = wrapper.querySelectorAll('input, select, textarea');
        for (var i = 0; i < inputboxes.length; i++) {
            inputboxes[i].addEventListener('change', function() {
                window.lmlquiz.saveQuiz();
            });
        }

        persoimg.addEventListener("DOMAttrModified", function(event) {
            if (event.attrName == "src") {
                window.lmlquiz.saveQuiz();
            }
        });

        document.querySelector(".quiz-personality-list").appendChild(wrapper);
        that.addPersoSelect(genID);
    };

    this.addEmptyPersonality = function() {
        that.addPersonality();
        return false;
    };

    this.addEmptyQuestion = function() {
        that.addQuestion();
        return false;
    };

    this.bind = function() {
        $('.quiz-add-personality').bind('click', that.addEmptyPersonality);
        $('.quiz-add-question').bind('click', that.addEmptyQuestion);

        if (!isPublished) {
            that.bindQuizAutoSave();
        }       
 
        return this;
    };
};
