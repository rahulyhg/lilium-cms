var StackTable = function(tableid, objTitle, dataScheme) {
    var htmlIdentifier = tableid;
    var scheme = dataScheme;
    var fieldName = dataScheme.fieldName;
    var title = objTitle;
    var linenumber = 0;
    var that = this;

    var render = function() {
        // Check for livevars
    }

    $('#' + htmlIdentifier).find('.lmlstacktableappendbutton').bind('click', function() {
        that.appendRow();
        return false;
    });


    var append = function(val, index) {
        var row = "<tr>";
        row += "<td>" + val + "</td>";
        row += "<input type='hidden' name='" + $('#' + htmlIdentifier).data('fieldname') + "[" + linenumber + "][" + scheme.columns[index].fieldName + "]' value='" + val + "'></input>";
        row += "<td><button class='lmlstacktableremovebutton'>Remove</button></td>";
        row += "</tr>";
        $('#' + htmlIdentifier).find('tr').last().after(row);
        $('#' + htmlIdentifier).find('.lmlstacktableremovebutton').bind('click', function() {
            $(this).parent().parent().remove();
        });

        linenumber++;

        return false;
    }


    this.appendRow = function(livevar) {
        $('.lmlstacktable th input').each(function(index) {
            if (livevar) {
                var data = livevar[$(this).data('fieldname')];
                for (var valueindex in data) {
                    append(data[valueindex], index);
                }
            } else {
                append($(this).val(), index);
                $(this).val('');
            }

        });



        return false;
    }

    var init = function() {
        render();
    };

    init();
};
