var StackTable = function(tableid, objTitle, dataScheme, fieldName) {
    var htmlIdentifier = tableid.replace(/\./g, '\\.');
    var scheme = dataScheme;
    var title = objTitle;
    var linenumber = 0;
    var that = this;
    var fieldname = fieldName;
    var columns = scheme.columns.length;

    var render = function() {
        // Check for livevars
    };

    $('#' + htmlIdentifier).find('.lmlstacktableappendbutton:not(.bound)').addClass("bound").bind('click', function() {
        that.appendRowFromButton();
        return false;
    });

    var append = function(val, index, obj) {
        if (!val) return "";

        var row = "<td>";
        
        switch (scheme.columns[index].dataType) {
            case "text":
                row += "<input type='text' name='" +
                    $('#' + htmlIdentifier).data('fieldname') + 
                    "[" + linenumber + "][" + scheme.columns[index].fieldName + "]' value='" + val + 
                    "'></input>";

                break;
            case "select":
                var nSelect = obj.clone().removeClass().val(val);
                nSelect.find('option[value="'+val+'"]').prop('selected', true).attr('selected', 'selected');
                nSelect.attr('name', $('#' + htmlIdentifier).data('fieldname') + 
                    "[" + linenumber + "][" + scheme.columns[index].fieldName + "]");

                row += nSelect.prop('outerHTML');

                break;
            default:
                row += "<input type='hidden' name='" +
                    $('#' + htmlIdentifier).data('fieldname') + 
                    "[" + linenumber + "][" + scheme.columns[index].fieldName + "]' value='" + val + 
                    "'></input>";
        }

        return row + "</td>";
    };

    this.appendRowFromButton = function() {
        var row = '<tr>';
        var selector = "#" + htmlIdentifier + ' th input, #' + htmlIdentifier + ' th select';    

        $(selector).each(function(index) {
            row += append($(this).val(), index, $(this));
            $(this).val('');
        });

        row += "<td><button class='lmlstacktableremovebutton'>Remove</button></td>";
        row += '</tr>';

        $('#' + htmlIdentifier).find('tr').last().after(row);
        $('#' + htmlIdentifier).find('.lmlstacktableremovebutton').bind('click', function() {
            $(this).parent().parent().remove();
        });

        linenumber++;
    };

    this.appendRow = function(livevar) {
        if (livevar[fieldname]) {
            var data  = livevar[fieldname];

            for (var i in data) {
                var row = '<tr>';

                $('#'+htmlIdentifier+' th input, #' + htmlIdentifier + ' th select').each(function(index) {
                        var coldata = data[i][$(this).data('fieldname')];
                        row += append(coldata, index, $(this));
                });
                row += "<td><button class='lmlstacktableremovebutton'>Remove</button></td>";

                row += '</tr>';
                $('#' + htmlIdentifier).find('tr').last().after(row);
                $('#' + htmlIdentifier).find('.lmlstacktableremovebutton').bind('click', function() {
                    $(this).parent().parent().remove();
                });
                linenumber++;
            }

            return false;
        }

    };

    var init = function() {
        render();
    };

    init();
};
